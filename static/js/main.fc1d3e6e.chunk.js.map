{"version":3,"sources":["baseurl.js","components/Alert.js","components/WorkSheets/AddCategory/index.js","components/WorkSheets/AddSubCategory/index.js","encoded_data.js","components/WorkSheets/AddQuestion/index.js","components/WorkSheets/ShowSubCategoryById.js","components/WorkSheets/AllSubCategory/index.js","components/WorkSheets/index.js","components/PdfManaging/UploadPdf/index.js","components/PdfManaging/Set_Demo_Pdf/index.js","components/PdfManaging/index.js","components/UpdateAuthorize.js","components/Test/EditTest/EditQuestion.js","components/Test/EditTest/index.js","components/Test/TestStatus/index.js","components/Test/TestHistory/index.js","components/Test/MakeTest/index.js","components/Test/AddQuestion/index.js","components/Test/ShowTest/index.js","components/Test/MakeTestWrapper/index.js","components/Test/AllQuestionsList.js","components/Test/ShowTestById/index.js","components/Test/AllTest/index.js","components/Test/Results/index.js","components/Test/Set_Demo_Test/index.js","components/Test/index.js","components/ManageStudents/UpdateStudentPermissions/index.js","components/Update_Payment_Status.js","components/ManageStudents/ManageCashPayment.js","components/ManageStudents/index.js","components/Enquiry/index.js","components/DashBoard/index.js","components/Login.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["baseurl","endurl","Alert","state","visible","showModal","_this","setState","handleOk","e","props","makeShowModalFalse","handleCancel","this","react_default","a","createElement","modal","title","onOk","onCancel","message","React","Component","AddCategory","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","UploadingData","handleChange","event","defineProperty","target","name","value","handleSubmit","english_name","modal_message","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","hindi_name","catch","err","console","log","formLayout","modal_title","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","es_form","layout","Item","assign","label","input","placeholder","onChange","es_button","type","loading","onClick","Alert_Alert","Fragment","Option","Select","AddSubCategory","handleFile","logo","files","handleSelectChange","category_id","formData","FormData","append","all_categories","_this2","_this3","length","spin","es_select","showSearch","style","width","optionFilterProp","filterOption","option","children","toLowerCase","indexOf","map","category","_id","key","color","backgroundColor","background","borderRadius","encoded_data","js_code","TextArea","Input","AddQuestion","validateForm","_this$state","sub_category_id","english_text","correct_option_index","options","i","validateOptions","found","replace","handleOptionChange","index","persist","object","custome_url","sendData","hindi_text","pic","handleAppendButton","newOption","question_id","all_sub_categories","action","encType","sub_category","AddQuestion_Option","size","row","col","rows","float","paddingRight","icon","AddQuestion_QuestionOption","max","min","QuestionOption","_this4","_this5","ShowSubCategoryById","categories","uploading_logo","handleChooseImage","handleUpdateLogo","alert","image_url","handleDataUpdate","id","match","params","padding","paddingLeft","labelInValue","defaultValue","item","ShowSubCategoryById_Option","height","src","alt","AllSubCategoryComponent","loading_categories","loading_subcategories","subcategories","HashRouter","basename","process","paddingTop","paddingBottom","AllSubCategory_Option","es_list","itemLayout","dataSource","renderItem","Meta","avatar","shape","Link","marginRight","to","url","AllSubCategory","localStorage","getItem","Switch","Route","exact","path","render","AllSubCategory_AllSubCategoryComponent","ShowSubCategoryById_ShowSubCategoryById","Redirect","pathname","SubMenu","Menu","Content","Layout","Header","Sider","WorkSheets","menu","theme","mode","borderRight","AddCategory_AddCategory","AddSubCategory_AddSubCategory","AddQuestion_AddQuestion","AllSubCategory_AllSubCategory","UploadPdf","pdf","parseInt","fileprogress","axios","request","onUploadProgress","p","loaded","total","UploadPdf_Option","progress","percent","status","Set_Demo_Test","onSelectTest","_ref","asyncToGenerator","regenerator_default","mark","_callee","_id_array","wrap","_context","prev","next","selected_demo_pdf_categories","stop","_x","apply","arguments","handleSave","updating_data","pdf_categories","Set_Demo_Pdf_Option","PdfManaging","PdfManaging_Sider","PdfManaging_SubMenu","PdfManaging_Content","UploadPdf_UploadPdf","Set_Demo_Pdf_Set_Demo_Test","UpdateAuthorize","update","updating","code","password","obj","EditQuestion","option_english_text","removeOption","option_id","new_option_array","filter","_Object$assign2","pic_url","_this$props","question","test_question_id","className","EditQuestion_TextArea","EditQuestion_QuestionOption","option_hindi_text","EditTest","dummy_data_1","test_id","dummy_data_2","EditQuestion_EditQuestion","TestStatus","TestHistory","handleTime","time","timeString","field","test_duration_in_seconds","moment","duration","asSeconds","toString","test_commence_time","end_time","handleDate","date","dateString","test_commence_date","handleOpenChange","open","open_commence_time","open_test_duration","open_end_time","handleClose","test_created","createTest","created_test","handleCreateTest","english_title","test","hindi_title","set_password","shuffle_required","date_picker","time_picker","onOpenChange","addon","es_switch","defaultChecked","IncrementQuestion","AddQuestion_TextArea","Test_AddQuestion_QuestionOption","ShowTest","no_of_questions","handleAddQuestion","newQuestionItem","questions","utc","test_allowed_time_in_seconds","format","test_online_no_of_days","Test_AddQuestion_AddQuestion","MakeTestWrapper","createdTest","testCreated","MakeTest_AddCategory","ShowTest_ShowTest","AllQuestions","Collapse","Panel","ShowTestById","count","toUpperCase","AllQuestionsList_AllQuestions","AllTestComponent","initLoading","list","getData","callback","isOnline","end_date_time","start_date_Time","difference_with_start_time","Date","toLocaleString","timeZone","diff","range","textAlign","marginTop","lineHeight","actions","skeleton","active","fontWeight","fontSize","description","AllTest","AllTest_AllTestComponent","ShowTestById_ShowTestById","CustomRow","values","ResultTable","selected_test_id","results","keys","position","top","zIndex","scope","Results","handle_refresh","refreshResult","loading_results","filter_tests_by_date","filtered_tests","all_tests","handle_date_change","test_date","selected_test_date","Results_Option","selected_test_ids","tests","Set_Demo_Test_Option","Test","Test_Sider","Test_SubMenu","Test_Content","MakeTestWrapper_MakeTestWrapper","AllTest_AllTest","Results_Results","EditTest_EditTest","Set_Demo_Test_Set_Demo_Test","TestStatus_TestStatus","TestHistory_TestHistory","UpdateStudentPermissions","uploading_data","student_data","history","goBack","switch_type","new_student_data","pdf_allowed","online_test_allowed","offline_test_allowed","student_id","email_id","UpdatePaymentStatus","handleUpdate","ManageCashPayment","handlePayment","selected_pack_id","payment_date","posting_data","objectSpread","make_payment_not_visible","pack_id","amount","centered","payment_visible","ManageCashPayment_Option","set_student_id","make_payment_visible","StudentsTable","students","ManageStudents_CustomRow","AllStudents","selected_student_id","Update_Payment_Status_UpdatePaymentStatus","ManageCashPayment_ManageCashPayment","ManageStudents","ManageStudents_AllStudents","UpdateStudentPermissions_UpdateStudentPermissions","EnquiryTable","enquiries","Enquiry_CustomRow","Enquiry","DashBoard","push","DashBoard_Header","WorkSheets_WorkSheets","Test_Test","UpdateAuthorize_UpdateAuthorize","PdfManaging_PdfManaging","ManageStudents_ManageStudents","Enquiry_Enquiry","Login","handleLogin","setItem","Main","DashBoard_DashBoard","Login_Login","App","Main_Main","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc1d3e6e.chunk.js","sourcesContent":["//export const baseurl = 'http://localhost:3000/';\r\nexport const baseurl = 'https://aaaacedmy2.herokuapp.com/';\r\nexport const endurl = 'p';\r\nexport const fileurl = 'uploads';\r\n","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nexport default class Alert extends React.Component {\r\n    state = { visible: false }\r\n    componentDidMount(){\r\n      this.setState({ visible : true})\r\n    }\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    }\r\n  \r\n    handleOk = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    handleCancel = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Modal\r\n            title= {this.props.title}\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <p>{this.props.message}</p>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from 'react'\r\n\r\nimport {\r\n    Form, Input, Button\r\n} from 'antd';\r\n\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport Alert from '../../Alert.js'\r\n\r\n\r\nexport default class AddCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : ''\r\n      };\r\n    }\r\n  \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n            this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Category Name In English Is Required\"})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/add_category/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n                <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin \r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class AddSubCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_categories : [],\r\n        category_id : 0,\r\n        logo : null,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ logo : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({ category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        } else if(this.state.logo === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Logo'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"sub_category_image\" , this.state.logo)\r\n            fetch(baseurl+`categories_and_sub_categories/add_sub_category/${endurl}` , {\r\n                method : 'POST',\r\n                body : formData\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Sub Category Added Successfully... '}))\r\n            .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Sub  Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_categories.map(category => {\r\n                    return(\r\n                        <Option value = {`${category._id}`} key = {category._id}>{category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Sub Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Sub  Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Logo ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","export const encoded_data = [\r\n  { name: 'theta', js_code: '\\u03B8' },\r\n  { name: 'angle', js_code: '\\u2220' },\r\n  { name: 'degree', js_code: '\\u00B0' },\r\n  { name: 'alpha', js_code: '\\u03B1' },\r\n  { name: 'beta', js_code: '\\u03B2' },\r\n  { name: 'gamma', js_code: '\\u03B3' },\r\n  { name: 'delta', js_code: '\\u0394' },\r\n  { name: 'sqrt', js_code: '\\u221A' },\r\n  { name: 'cbrt', js_code: '\\u221B' },\r\n  { name: 'square', js_code: '\\u00B2' },\r\n  { name: 'cube', js_code: '\\u00B3' },\r\n  { name: 'powern', js_code: '\\u207F' },\r\n  { name: 'bar', js_code: '\\u203E' }\r\n];\r\n","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Row, Col , Icon ,  Spin \r\n} from 'antd';\r\n \r\nimport Alert from '../../Alert'\r\n\r\nimport { encoded_data } from '../../../encoded_data'\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            \"all_sub_categories\" : [],\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            UploadingData : false,\r\n            showModal : false,\r\n            modal_title : '',\r\n            modal_message : '',\r\n            type : ''\r\n        }\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    validateForm = () => {\r\n      let validateOptions = () => {\r\n        for(let i = 0 ; i  < this.state.options.length ; i++){\r\n          if(this.state.options[i].english_text === '' ){\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      }\r\n      const { sub_category_id , english_text , correct_option_index , options , type } = this.state\r\n      if(sub_category_id === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        return false\r\n      }else if(type === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Enter Type '})\r\n        return false\r\n      }else if(english_text === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Type The Question'})\r\n        return false\r\n      }else if(options.length === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Make Options'})\r\n        return false\r\n      }\r\n      else if(validateOptions() === false){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill All The Options'})\r\n         return false\r\n      }else if(correct_option_index === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill Correct Option Field'})\r\n        return false\r\n      }else if(correct_option_index > options.length || correct_option_index < 1){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Invalid Option'})\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        let found = false ;\r\n        for(let i = 0 ; i < encoded_data.length ; i++){\r\n          if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n            found = true\r\n            this.setState({ [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code) })  \r\n            break ;\r\n          }\r\n        }\r\n        if(!found){\r\n          this.setState({ [event.target.name] : event.target.value })  \r\n        }\r\n    }\r\n\r\n    handleOptionChange = (index , event) => {\r\n      event.persist();\r\n      let object = {};\r\n      let found = false ;\r\n      for(let i = 0 ; i < encoded_data.length ; i++){\r\n        if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n          found = true\r\n          object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code)})\r\n          break ;\r\n        }\r\n      }\r\n      if(!found){\r\n         object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value})\r\n      }\r\n      this.setState(state => ({ [state.options[index]] : object}))\r\n    }\r\n  \r\n\r\n    handleSelectChange = (value) => {\r\n      this.setState({ sub_category_id : value })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        if(this.validateForm() === true){\r\n          let custome_url = `questions/add_without_image/${endurl}`\r\n          this.setState({ UploadingData : true})\r\n          let formData = new FormData()\r\n          const sendData = {\r\n            \"english_text\" : this.state.english_text,\r\n            \"hindi_text\" : this.state.hindi_text,\r\n            options : this.state.options,\r\n            correct_option_index : this.state.correct_option_index,\r\n            sub_category_id : this.state.sub_category_id,\r\n            type : this.state.type\r\n          }\r\n          formData.append(\"SendData\" , JSON.stringify(sendData))\r\n          if(this.state.pic !== null ){\r\n          custome_url = `questions/add_with_image/${endurl}`;  \r\n          formData.append(\"question_image\" , this.state.pic)}\r\n          fetch(baseurl+custome_url , {\r\n              method : 'POST',\r\n              body : formData\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {this.setState({ UploadingData : false ,\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            showModal : true,\r\n            modal_title : 'Confirmation',\r\n            modal_message : 'Question Added Successfully'});})\r\n          .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact To Technical Team'});console.log(err)})\r\n      } else {}\r\n    }\r\n\r\n    handleFile = (e) => {\r\n      this.setState({ pic : e.target.files[0]})\r\n    }\r\n\r\n    handleAppendButton = () => {\r\n        const newOption = {\r\n          \"english_text\" : '',\r\n          \"hindi_text\" : '',\r\n          \"question_id\" : ''\r\n        }\r\n        this.setState(state => ({\r\n          options : state.options.concat(newOption)\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n\r\n        return (\r\n          <div>\r\n            <center><h1>Add Question</h1></center>\r\n            <Form layout={formLayout} action = '#' method = 'post'  encType = 'multipart/form-data'  >\r\n              <Form.Item\r\n                label=\"Select Sub Category\"\r\n                {...formItemLayout}\r\n              >  \r\n                {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Sub Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n                </Select>)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Enter Type\"\r\n                {...formItemLayout}>\r\n                  <Input size=\"large\" name = \"type\" placeholder=\"Enter Type\" onChange = {this.handleChange} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Question\"\r\n                {...formItemLayout}>\r\n                <Row>\r\n                    <Col span={10}><TextArea name = \"english_text\" value = {this.state.english_text} rows={4} placeholder = \"In English\" onChange = {this.handleChange} /></Col>\r\n                    <Col span={10} offset={1}><TextArea name = \"hindi_text\" value = {this.state.hindi_text} rows={4} placeholder = \"In Hindi\" onChange = {this.handleChange} /></Col>\r\n                </Row>\r\n              </Form.Item>\r\n              <div style = {{ float : \"right\" , paddingRight : \"10%\"}}>\r\n                <Button  type=\"primary\" onClick = {this.handleAppendButton} >\r\n                    Add Option<Icon type=\"plus-square\" />\r\n                </Button>\r\n              </div>\r\n              <br/>\r\n              <br/>\r\n              {this.state.options.map((option,index) => {\r\n                return <QuestionOption key = {index} option = {option} index = {index} handleOptionChange = {this.handleOptionChange} />\r\n              })}\r\n              <Form.Item label=\"Correct Option\"\r\n                {...formItemLayout}>\r\n                <Input type = {`number`} max = {this.state.options.length} min = {1}\r\n                value = {this.state.correct_option_index} onChange = {this.handleChange} name = 'correct_option_index'  />\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}  >\r\n                Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}>\r\n                  <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_text : ''\r\n    }\r\n  }\r\n  componentDidMount(){}\r\n  \r\n  render(){\r\n    const { formLayout } = this.state;\r\n            const formItemLayout = formLayout === 'horizontal' ? {\r\n              labelCol: { span: 4 },\r\n              wrapperCol: { span: 14 },\r\n            } : null;\r\n            const buttonItemLayout = formLayout === 'horizontal' ? {\r\n              wrapperCol: { span: 14, offset: 4 },\r\n            } : null;\r\n     return(\r\n      <Form.Item label = {`Option ${this.props.index + 1}`}\r\n      {...formItemLayout}>\r\n      <Row>\r\n          <Col span={10}><Input value = {this.props.option.english_text} size=\"large\" name = \"english_text\" placeholder=\"Type In English\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n          <Col span={10} offset={1}><Input value = {this.props.option.hindi_text} size=\"large\" name = \"hindi_text\" placeholder=\"Type In Hindi\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n      </Row>\r\n    </Form.Item>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin , Row , Col , Input , Select , Button } from 'antd';\r\nimport Alert from '../Alert';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\nexport default class ShowSubCategoryById extends React.Component {\r\n    state = {\r\n        _id : '',\r\n        loading : false ,\r\n        english_name : '',\r\n        hindi_name : '',\r\n        category_id : '',\r\n        logo : '',\r\n        categories : [],\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : '',\r\n        uploading_logo :  null\r\n    }\r\n\r\n    makeShowModalFalse = () => {\r\n        this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    componentDidMount(){\r\n      let id = this.props.match.params.id\r\n      this.setState({ loading : true  , _id :  id })\r\n      fetch(`${baseurl}categories_and_sub_categories/fetch_sub_category_by_id/${id}/${endurl}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {this.setState({ english_name : data.english_name , hindi_name : data.hindi_name , category_id : data.category_id , logo : data.logo })\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {this.setState({categories : data , loading : false})})\r\n        .catch((err) => console.log(err))\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ category_id : value })\r\n    }\r\n\r\n    handleChooseImage = (e) => {\r\n        this.setState({ uploading_logo : e.target.files[0] })\r\n    }\r\n\r\n    handleUpdateLogo = () => {\r\n        if(this.state.uploading_logo === null){\r\n            alert(\"Please Choose Image ....\")\r\n        } else {\r\n            this.setState({ UploadingData : true })\r\n            let sendData = new FormData()\r\n            sendData.append('_id' , this.state._id)\r\n            sendData.append('logo' , this.state.uploading_logo )\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/update_sub_category_image/${endurl}` , {\r\n                method : 'POST',\r\n                body : sendData\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( {  showModal : true , title : 'Confirmation' , modal_message : data.message , logo : data.image_url }))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    handleDataUpdate = () => {\r\n        if(this.state.english_name === ''){\r\n            alert(\"English Name Cannot Be Empty\")\r\n        } else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/update_sub_category_data/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( {  showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n       }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loading === true){\r\n            return (\r\n            <div style = {{ padding : '15%' , paddingLeft : '50%'}}>\r\n                <Spin size=\"large\" />\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div style = {{ padding : '5%'}} >\r\n                    <Row>\r\n                      <Col span={6}  >\r\n                      <b>Category</b><br/>\r\n                      <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Select Category\"\r\n                        optionFilterProp=\"children\"\r\n                        labelInValue \r\n                        defaultValue={{ key: this.state.category_id }}\r\n                        onChange={this.handleChange}\r\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                      >\r\n                        {this.state.categories.map((item, index) => {\r\n                           return (<Option key = {item._id} value={item._id}>{item.english_name}</Option>)\r\n                        })}\r\n                      </Select>\r\n                      </Col>\r\n                      <Col span={6} offset = {1} ><b>Sub Category Name (English)</b><Input value = {this.state.english_name} onChange = {(e) => {this.setState({ english_name : e.target.value})}} size=\"large\" placeholder=\"large size\" /></Col>\r\n                      <Col span={6} offset = {1} ><b>Sub Category Name (Hindi)</b><Input value = {this.state.hindi_name} size=\"large\" placeholder=\"large size\" onChange = {(e) => { this.setState({ hindi_name : e.target.value}) }} /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span = {18}>\r\n                          <br/>\r\n                          <Button type=\"primary\" loading={this.state.UploadingData} onClick = {() => this.handleDataUpdate()}  size={\"large\"}>Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <img height = '300px' width = '400px' src  = {`${baseurl}uploads/sub_category/${this.state.logo}`} alt = {\"Not Available\"} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <h4>Choose Image To Upload</h4>\r\n                          <input type = 'file' onChange = {this.handleChooseImage} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <Button type=\"primary\" loading={this.state.UploadingData} onClick = {this.handleUpdateLogo}  size={\"large\"}>Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n  }\r\n  ","\r\nimport React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin , List , Avatar\r\n} from 'antd';\r\n\r\nimport { Link , HashRouter as Router , Switch , Route , Redirect } from  'react-router-dom'\r\nimport ShowSubCategoryById from '../ShowSubCategoryById';\r\n\r\nconst Option = Select.Option\r\n\r\n\r\nclass AllSubCategoryComponent extends React.Component {\r\n    state = {\r\n        loading_categories : false,\r\n        categories : [],\r\n        loading_subcategories : false,\r\n        subcategories : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loading_categories : true })\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({categories : data , loading_categories : false}))\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({ loading_categories : true })\r\n        fetch(`${baseurl}categories_and_sub_categories/sub_categories/${value}/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {this.setState({ loading_subcategories : false , subcategories : data })})\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n        return(\r\n            <Router basename = {process.env.PUBLIC_URL} >\r\n            <div style = {{ paddingLeft : '10%' , paddingTop : '3%' , paddingBottom : '3%' }}>\r\n            <center><h1>All SubCategories </h1></center>\r\n            <Form layout={formLayout}>\r\n                <Form.Item\r\n                label=\"Select Category\"\r\n                {...formItemLayout}\r\n                >\r\n                {this.state.categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select Category \"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={this.handleSelectChange}\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                > \r\n                    {this.state.categories.map(category => {\r\n                        return(\r\n                            <Option value = {`${category._id}`} key = {category._id}>{category.english_name}</Option>\r\n                        )\r\n                    })}\r\n                </Select>)}\r\n                </Form.Item>\r\n            </Form>\r\n            {this.state.loading_subcategories === true ? <Spin size=\"large\" /> : \r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={this.state.subcategories}\r\n                renderItem={item => (\r\n                <List.Item>\r\n                    <List.Item.Meta\r\n                    title={<b>{item.english_name}</b>}\r\n                    avatar = {<Avatar shape=\"square\" size=\"large\" style = {{ height : \"70%\" , width : '80%' }} src  = {`${baseurl}uploads/sub_category/${item.logo}`} />}\r\n                    />\r\n                    <Link  style = {{ paddingRight : '5%' , marginRight : '10%' }} to = {`${this.props.match.url}/${item._id}`}>\r\n                        <Button  type=\"primary\" size={\"large\"}>\r\n                          Edit\r\n                        </Button>\r\n                    </Link>\r\n                </List.Item>\r\n                )}\r\n            />\r\n            }\r\n          </div>\r\n          </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default class AllSubCategory extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {}\r\n    }\r\n    render(){\r\n      if(localStorage.getItem('authenticated') === \"true\"){  \r\n        let match = this.props.match   \r\n        return(\r\n          <Router basename = {process.env.PUBLIC_URL} >\r\n              <Switch>\r\n                <Route exact path = {`${match.url}`} render = {props => <AllSubCategoryComponent {...props} /> } />\r\n                <Route path = {`${match.url}/:id`} render = {props => <ShowSubCategoryById {...props} /> } />  \r\n              </Switch>\r\n          </Router>\r\n        )\r\n      } else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n      }  \r\n    }\r\n  }\r\n  ","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  HashRouter as Router} from 'react-router-dom'\r\nimport AddCategory from './AddCategory/index'\r\nimport AddSubCategory from './AddSubCategory/index'\r\nimport AddQuestions from './AddQuestion/index'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport AllSubCategory from './AllSubCategory/index';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class WorkSheets extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router  basename = {process.env.PUBLIC_URL} >   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"folder-open\" />Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_category`} >Add Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\">All Categories</Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" title={<span><Icon type=\"folder-open\" />Sub Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_sub_category`} >Add Sub Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\"><Link to = {`${match.url}/all_sub_categories`} >All Sub Categories</Link></Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Sub  Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Sub  Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub3\" title={<span><Icon type=\"question-circle\" />Questions</span>}>\r\n                    <Menu.Item key=\"9\"><Link to = {`${match.url}/add_questions`} > Add Questions </Link></Menu.Item>\r\n                    <Menu.Item key=\"10\">All Questions</Menu.Item>\r\n                    <Menu.Item key=\"11\">Edit Questions</Menu.Item>\r\n                    <Menu.Item key=\"12\">Delete Questions</Menu.Item>\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/add_category`} render = {props => <AddCategory {...props} />} />\r\n                    <Route  path = {`${match.url}/add_sub_category`} render = {props => <AddSubCategory {...props}/>} />\r\n                    <Route  path = {`${match.url}/add_questions`} render = {props => <AddQuestions {...props}/>} />\r\n                    <Route  path = {`${match.url}/all_sub_categories`} render = {props => <AllSubCategory {...props} /> } />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin , Progress\r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nimport axios from 'axios';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class UploadPdf extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_sub_categories : [],\r\n        sub_category_id : 0,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false,\r\n        pdf : null,\r\n        fileprogress : 0\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ pdf : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        for( let i = 0 ;  i < this.state.all_sub_categories.length ; i++ ){\r\n            if(this.state.all_sub_categories[i]._id === parseInt(value)){\r\n                this.setState({ english_name : this.state.all_sub_categories[i].english_name})\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ sub_category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.sub_category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Sub  Category'})\r\n        } else if(this.state.pdf === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Pdf File'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true , fileprogress : 0})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"pdf\" , this.state.pdf)\r\n            // fetch(baseurl+`pdf/upload_pdf/${endurl}` , {\r\n            //     method : 'POST',\r\n            //     body : formData\r\n            // })\r\n            // .then((res) => res.json())\r\n            // .then((data) => this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '}))\r\n            // .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n            axios.request( {\r\n                method: \"post\", \r\n                url: baseurl+`pdf/upload_pdf/${endurl}`, \r\n                data: formData, \r\n                onUploadProgress: (p) => {\r\n                  this.setState({\r\n                    fileprogress: p.loaded / p.total\r\n                  })\r\n                }\r\n            }).then (data => {\r\n            this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '})    \r\n            this.setState({\r\n                fileprogress: 1.0,\r\n            })\r\n            }).catch((err) => {\r\n                this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); \r\n                console.log(err)\r\n            })\r\n        \r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Upload Pdf</h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Sub Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub  Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Pdf In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf  Name (Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Pdf Name In Hindi\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n            </Form.Item>\r\n            <Progress percent= {this.state.fileprogress * 100} status=\"active\" />\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Upload\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\n\r\nimport { Row, Col, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class Set_Demo_Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pdf_categories: [],\r\n      updating_data: false,\r\n      selected_demo_pdf_categories: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ pdf_categories: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSelectTest = async _id_array => {\r\n    this.setState({ selected_demo_pdf_categories: _id_array });\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ updating_data: true });\r\n    fetch(\r\n      `${baseurl}categories_and_sub_categories/set_demo_pdf_category/${endurl}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(this.state.selected_demo_pdf_categories)\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ updating_data: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose PDFS For Demo PDF </h3>\r\n            <Select\r\n              mode='multiple'\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.pdf_categories.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            {this.state.updating_data === true ? (\r\n              <Button\r\n                size={'large'}\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n              >\r\n                Saving ...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                width='100%'\r\n                type='primary'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Your Choice\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport UploadPdf from '../PdfManaging/UploadPdf/index';\r\nimport Set_Demo_Test from '../PdfManaging/Set_Demo_Pdf/index';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Content, Sider } = Layout;\r\n\r\nexport default class PdfManaging extends React.Component {\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout>\r\n            <Sider width={'20%'} style={{ background: '#fff' }}>\r\n              <Menu\r\n                theme='dark'\r\n                mode='inline'\r\n                style={{ height: '100%', borderRight: 0 }}\r\n              >\r\n                <SubMenu\r\n                  key='sub3'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='question-circle' />\r\n                      Pdf Files\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='9'>\r\n                    <Link to={`${match.url}/upload_pdfs`}>\r\n                      {' '}\r\n                      Upload Pdf Files{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='10'>\r\n                    <Link to={`${match.url}/set_demo_pdf`}>\r\n                      {' '}\r\n                      Set Demo Pdf Files{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='11'>All Pdfs </Menu.Item>\r\n                  <Menu.Item key='12'>Edit Pdf Files</Menu.Item>\r\n                  <Menu.Item key='13'>Delete Pdf Files</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/upload_pdfs`}\r\n                  render={props => <UploadPdf {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/set_demo_pdf`}\r\n                  render={props => <Set_Demo_Test {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/all_pdfs`}\r\n                  render={props => <h1>List All Pdfs</h1>}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/edit_pdf`}\r\n                  render={props => <h1>Edit List All Pdfs</h1>}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/delete_pdf`}\r\n                  render={props => <h1>Delete</h1>}\r\n                />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Input, Button, Row, Col, Spin } from 'antd';\r\nimport { baseurl, endurl } from '../baseurl';\r\nexport default class UpdateAuthorize extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      code: '',\r\n      password: '',\r\n      loading: false,\r\n      updating: false\r\n    };\r\n  }\r\n\r\n  update = () => {\r\n    this.setState({ updating: true });\r\n    let sendData = this.state;\r\n    fetch(`${baseurl}authorize/update/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(sendData)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        data.code === 'success'\r\n          ? alert('Updated Sucessfully')\r\n          : alert('Technical Error. Please Contact To Technical Team');\r\n        this.setState({ updating: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}authorize/get/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          code: data.code,\r\n          password: data.password,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ padding: '5%' }}>\r\n          <h2> Update Credentials </h2>\r\n          <div style={{ padding: '5%' }}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <h3> Secret Code </h3>\r\n                <Input\r\n                  placeholder=''\r\n                  value={this.state.code}\r\n                  onChange={obj => this.setState({ code: obj.target.value })}\r\n                  name='code'\r\n                />\r\n              </Col>\r\n              <Col offset={2} span={10}>\r\n                <h3> Password </h3>\r\n                <Input\r\n                  placeholder=''\r\n                  value={this.state.password}\r\n                  onChange={obj =>\r\n                    this.setState({ password: obj.target.value })\r\n                  }\r\n                  name='password'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col span={10} />\r\n              <Col offset={2} span={10}>\r\n                {this.state.updating === true ? (\r\n                  <Button\r\n                    size={'large'}\r\n                    type='primary'\r\n                    loading={this.state.updating}\r\n                  >\r\n                    Updating ...\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    width='100%'\r\n                    type='primary'\r\n                    size={'large'}\r\n                    onClick={this.update}\r\n                  >\r\n                    Click To Update\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl, fileurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Select, Row, Col, Icon, Spin } from 'antd';\r\nimport { encoded_data } from '../../../encoded_data';\r\nimport Alert from '../../Alert';\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class EditQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      formLayout: 'horizontal',\r\n      options: [],\r\n      correct_option_index: null,\r\n      question_id: '',\r\n      pic: null,\r\n      pic_url: null,\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { question, options } = this.props;\r\n    this.setState({\r\n      question_id: question.test_question_id,\r\n      english_text: question.english_text,\r\n      hindi_text: question.hindi_text,\r\n      options: options,\r\n      correct_option_index: question.correct_option_index,\r\n      pic_url: question.pic\r\n    });\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  validateForm = () => {\r\n    let validateOptions = () => {\r\n      for (let i = 0; i < this.state.options.length; i++) {\r\n        if (this.state.options[i].option_english_text === '') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    const { english_text, correct_option_index, options } = this.state;\r\n    if (english_text === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Type The Question'\r\n      });\r\n      return false;\r\n    } else if (options.length === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Make Options'\r\n      });\r\n      return false;\r\n    } else if (validateOptions() === false) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill All The Options'\r\n      });\r\n      return false;\r\n    } else if (correct_option_index === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill Correct Option Field'\r\n      });\r\n      return false;\r\n    } else if (\r\n      correct_option_index > options.length ||\r\n      correct_option_index < 1\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Invalid Option'\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        this.setState({\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  removeOption = option_id => {\r\n    let new_option_array = this.state.options.filter(option => {\r\n      return option.option_id != option_id;\r\n    });\r\n    this.setState({ options: new_option_array });\r\n  };\r\n\r\n  handleOptionChange = (index, event) => {\r\n    event.persist();\r\n    let object = {};\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      if (event.target.name === 'option_english_text') {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value,\r\n          option_hindi_text: event.target.value\r\n        });\r\n      } else {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    }\r\n    this.setState(state => ({ [state.options[index]]: object }));\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ sub_category_id: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.validateForm() === true) {\r\n      let custome_url = `tests/update_test_question_without_image/${endurl}`;\r\n      this.setState({ UploadingData: true });\r\n      let formData = new FormData();\r\n      const sendData = {\r\n        question_id: this.state.question_id,\r\n        english_text: this.state.english_text,\r\n        hindi_text: this.state.hindi_text,\r\n        options: this.state.options,\r\n        correct_option_index: this.state.correct_option_index\r\n      };\r\n      formData.append('SendData', JSON.stringify(sendData));\r\n      if (this.state.pic !== null) {\r\n        custome_url = `tests/update_test_question_with_image/${endurl}`;\r\n        formData.append('question_image', this.state.pic);\r\n      }\r\n      fetch(baseurl + custome_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.code === 'success') {\r\n            this.setState({\r\n              UploadingData: false,\r\n              showModal: true,\r\n              modal_title: 'Confirmation',\r\n              modal_message: 'Question Updated Successfully'\r\n            });\r\n          } else {\r\n            this.setState({\r\n              UploadingData: false,\r\n              showModal: true,\r\n              modal_title: 'Error',\r\n              modal_message: 'Server Error'\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact To Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  handleFile = e => {\r\n    this.setState({ pic: e.target.files[0] });\r\n  };\r\n\r\n  handleAppendButton = () => {\r\n    const newOption = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      question_id: ''\r\n    };\r\n    this.setState(state => ({\r\n      options: state.options.concat(newOption)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n\r\n    return (\r\n      <div className='box'>\r\n        <hr />\r\n        <Form\r\n          layout={formLayout}\r\n          action='#'\r\n          method='post'\r\n          encType='multipart/form-data'\r\n        >\r\n          <Form.Item label='Question' {...formItemLayout}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <TextArea\r\n                  name='english_text'\r\n                  value={this.state.english_text}\r\n                  rows={4}\r\n                  placeholder='In English'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n              <Col span={10} offset={1}>\r\n                <TextArea\r\n                  name='hindi_text'\r\n                  value={this.state.hindi_text}\r\n                  rows={4}\r\n                  placeholder='In Hindi'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <div style={{ padding: '5%' }}>\r\n            <Row>\r\n              <Col>\r\n                <img\r\n                  alt='No Image Available'\r\n                  src={`${baseurl}${fileurl}/questions/${this.state.pic_url}`}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          {/* <div style={{ float: 'right', paddingRight: '10%' }}>\r\n            <Button type='primary' onClick={this.handleAppendButton}>\r\n              Add Option\r\n              <Icon type='plus-square' />\r\n            </Button>\r\n          </div> */}\r\n          <br />\r\n          <br />\r\n          {this.state.options.map((option, index) => {\r\n            return (\r\n              <QuestionOption\r\n                key={index}\r\n                option={option}\r\n                index={index}\r\n                handleOptionChange={this.handleOptionChange}\r\n                removeOption={this.removeOption}\r\n              />\r\n            );\r\n          })}\r\n          <Form.Item label='Correct Option' {...formItemLayout}>\r\n            <Input\r\n              type={`number`}\r\n              max={this.state.options.length}\r\n              min={1}\r\n              value={this.state.correct_option_index}\r\n              onChange={this.handleChange}\r\n              name='correct_option_index'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <input\r\n                type='file'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  background: 'transparent',\r\n                  borderRadius: 5\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Update Question\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formLayout: 'horizontal'\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    return (\r\n      <Form.Item label={`Option ${this.props.index + 1}`} {...formItemLayout}>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Input\r\n              value={this.props.option.option_english_text}\r\n              size='large'\r\n              name='option_english_text'\r\n              placeholder='Type In English'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={1}>\r\n            <Input\r\n              value={this.props.option.option_hindi_text}\r\n              size='large'\r\n              name='option_hindi_text'\r\n              placeholder='Type In Hindi'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n          {/* <Col span={5} offset={1}>\r\n            <Button\r\n              type='primary'\r\n              onClick={() =>\r\n                this.props.removeOption(this.props.option.option_id)\r\n              }\r\n            >\r\n              Remove\r\n            </Button>\r\n          </Col> */}\r\n        </Row>\r\n      </Form.Item>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport EditQuestion from './EditQuestion';\r\n\r\nexport default class EditTest extends React.Component {\r\n  dummy_data_1 = [\r\n    {\r\n      option_id: 3029,\r\n      test_question_id: 226,\r\n      option_english_text: '45',\r\n      option_hindi_text: '',\r\n      _id: 226,\r\n      test_id: 61,\r\n      correct_option_index: '2',\r\n      english_text:\r\n        'A and B together can do a piece of work in 20 days and A alone can do it in 30 days. B alone can do the work in how many days ? ',\r\n      hindi_text:\r\n        'A और B मिलकर एक कार्य को 20 दिनों में पूरा कर सकते हैं तथा A अकेले इसे 30 दिनों में पूरा कर सकता है। B अकेले इस कार्य को कितने दिनों में पूरा कर सकता है ?',\r\n      pic: null\r\n    },\r\n    {\r\n      option_id: 3030,\r\n      test_question_id: 226,\r\n      option_english_text: '60',\r\n      option_hindi_text: '',\r\n      _id: 226,\r\n      test_id: 61,\r\n      correct_option_index: '2',\r\n      english_text:\r\n        'A and B together can do a piece of work in 20 days and A alone can do it in 30 days. B alone can do the work in how many days ? ',\r\n      hindi_text:\r\n        'A और B मिलकर एक कार्य को 20 दिनों में पूरा कर सकते हैं तथा A अकेले इसे 30 दिनों में पूरा कर सकता है। B अकेले इस कार्य को कितने दिनों में पूरा कर सकता है ?',\r\n      pic: null\r\n    },\r\n    {\r\n      option_id: 3031,\r\n      test_question_id: 226,\r\n      option_english_text: '75',\r\n      option_hindi_text: '',\r\n      _id: 226,\r\n      test_id: 61,\r\n      correct_option_index: '2',\r\n      english_text:\r\n        'A and B together can do a piece of work in 20 days and A alone can do it in 30 days. B alone can do the work in how many days ? ',\r\n      hindi_text:\r\n        'A और B मिलकर एक कार्य को 20 दिनों में पूरा कर सकते हैं तथा A अकेले इसे 30 दिनों में पूरा कर सकता है। B अकेले इस कार्य को कितने दिनों में पूरा कर सकता है ?',\r\n      pic: null\r\n    },\r\n    {\r\n      option_id: 3032,\r\n      test_question_id: 226,\r\n      option_english_text: '90',\r\n      option_hindi_text: '',\r\n      _id: 226,\r\n      test_id: 61,\r\n      correct_option_index: '2',\r\n      english_text:\r\n        'A and B together can do a piece of work in 20 days and A alone can do it in 30 days. B alone can do the work in how many days ? ',\r\n      hindi_text:\r\n        'A और B मिलकर एक कार्य को 20 दिनों में पूरा कर सकते हैं तथा A अकेले इसे 30 दिनों में पूरा कर सकता है। B अकेले इस कार्य को कितने दिनों में पूरा कर सकता है ?',\r\n      pic: null\r\n    },\r\n    {\r\n      option_id: 3033,\r\n      test_question_id: 226,\r\n      option_english_text: 'None',\r\n      option_hindi_text: '',\r\n      _id: 226,\r\n      test_id: 61,\r\n      correct_option_index: '2',\r\n      english_text:\r\n        'A and B together can do a piece of work in 20 days and A alone can do it in 30 days. B alone can do the work in how many days ? ',\r\n      hindi_text:\r\n        'A और B मिलकर एक कार्य को 20 दिनों में पूरा कर सकते हैं तथा A अकेले इसे 30 दिनों में पूरा कर सकता है। B अकेले इस कार्य को कितने दिनों में पूरा कर सकता है ?',\r\n      pic: null\r\n    }\r\n  ];\r\n  dummy_data_2 = [\r\n    {\r\n      option_id: 233,\r\n      test_question_id: 59,\r\n      option_english_text: '1',\r\n      option_hindi_text: '',\r\n      _id: 59,\r\n      test_id: 56,\r\n      correct_option_index: '2',\r\n      english_text: ' ',\r\n      hindi_text: ' ',\r\n      pic: '63f8b1c4b5856abea4634d707b585dbd'\r\n    },\r\n    {\r\n      option_id: 234,\r\n      test_question_id: 59,\r\n      option_english_text: '2',\r\n      option_hindi_text: '',\r\n      _id: 59,\r\n      test_id: 56,\r\n      correct_option_index: '2',\r\n      english_text: ' ',\r\n      hindi_text: ' ',\r\n      pic: '63f8b1c4b5856abea4634d707b585dbd'\r\n    },\r\n    {\r\n      option_id: 235,\r\n      test_question_id: 59,\r\n      option_english_text: '3',\r\n      option_hindi_text: '',\r\n      _id: 59,\r\n      test_id: 56,\r\n      correct_option_index: '2',\r\n      english_text: ' ',\r\n      hindi_text: ' ',\r\n      pic: '63f8b1c4b5856abea4634d707b585dbd'\r\n    },\r\n    {\r\n      option_id: 236,\r\n      test_question_id: 59,\r\n      option_english_text: '0',\r\n      option_hindi_text: '',\r\n      _id: 59,\r\n      test_id: 56,\r\n      correct_option_index: '2',\r\n      english_text: ' ',\r\n      hindi_text: ' ',\r\n      pic: '63f8b1c4b5856abea4634d707b585dbd'\r\n    }\r\n  ];\r\n  render() {\r\n    return (\r\n      <EditQuestion\r\n        question={this.dummy_data_1[0]}\r\n        options={this.dummy_data_1}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default class TestStatus extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>Test Status</h1>\r\n       )\r\n   }\r\n}","import React from 'react'\r\n\r\n\r\nexport default class TestHistory extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>TestHistory</h1>\r\n       )\r\n   }\r\n}","import React from 'react';\r\n\r\nimport { Switch, Input, Button, Row, Col, TimePicker, DatePicker } from 'antd';\r\n\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport Alert from '../../Alert.js';\r\nimport moment from 'moment';\r\n\r\nexport default class AddCategory extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_title: '',\r\n      hindi_title: '',\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: '',\r\n      test_duration_in_seconds: '',\r\n      test_commence_date: '',\r\n      test_commence_time: '',\r\n      open_test_duration: false,\r\n      open_commence_time: false,\r\n      open_end_time: false,\r\n      end_time: '',\r\n      set_password: true,\r\n      shuffle_required: true,\r\n      test_created: false,\r\n      created_test: {}\r\n    };\r\n  }\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleTime = (time, timeString, field) => {\r\n    switch (field) {\r\n      case 'test_duration_in_seconds':\r\n        this.setState({\r\n          test_duration_in_seconds: moment\r\n            .duration(timeString)\r\n            .asSeconds()\r\n            .toString()\r\n        });\r\n        break;\r\n      case 'test_commence_time':\r\n        this.setState({ test_commence_time: timeString });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ end_time: timeString });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleDate = (date, dateString) => {\r\n    this.setState({ test_commence_date: dateString });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  /////////////////  Handling Fields /////////////////////\r\n\r\n  handleOpenChange = (open, field) => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: open });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: open });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: open });\r\n        break;\r\n      default:\r\n        console.log('Default');\r\n    }\r\n  };\r\n\r\n  handleClose = field => {\r\n    switch (field) {\r\n      case 'test_commence_time':\r\n        this.setState({ open_commence_time: false });\r\n        break;\r\n      case 'test_duration':\r\n        this.setState({ open_test_duration: false });\r\n        break;\r\n      case 'end_time':\r\n        this.setState({ open_end_time: false });\r\n        break;\r\n      default:\r\n        console.log('Default....');\r\n    }\r\n  };\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n    if (this.state.test_created === true) {\r\n      this.props.createTest(this.state.created_test);\r\n    }\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  handleCreateTest = () => {\r\n    const sendData = this.state;\r\n    if (sendData.english_title === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Title Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_date === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Date Is Required ...'\r\n      });\r\n    } else if (sendData.test_commence_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Commence Time Is Required ...'\r\n      });\r\n    } else if (sendData.test_duration_in_seconds === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Test Duration Is Required ..'\r\n      });\r\n    } else if (sendData.end_time === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        title: 'Requirements',\r\n        modal_message: 'Please Enter Test End Time'\r\n      });\r\n    } else {\r\n      this.setState({ UploadingData: true });\r\n      fetch(baseurl + `tests/create/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(sendData)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Confirmation',\r\n            modal_message: data.message,\r\n            test_created: true,\r\n            created_test: data.test\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            title: 'Server Error ',\r\n            modal_message: 'Please Contact To Technical Team '\r\n          });\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: '3%' }}>\r\n        <center>\r\n          <h1> Make Test </h1>\r\n        </center>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Title In English</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.english_title}\r\n              onChange={this.handleChange}\r\n              name='english_title'\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Test Title In Hindi</h3>\r\n            <Input\r\n              placeholder='Ex.  Time And Work , Speed And Distance , Profit And Loss'\r\n              value={this.state.hindi_title}\r\n              onChange={this.handleChange}\r\n              name='hindi_title'\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Test Commence Date </h3>\r\n            <DatePicker onChange={this.handleDate} />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test Commence Time</h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_commence_time}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_commence_time')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_commence_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_commence_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3>Test Duration</h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_test_duration}\r\n              onOpenChange={open =>\r\n                this.handleOpenChange(open, 'test_duration')\r\n              }\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'test_duration_in_seconds')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('test_duration')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test End Time </h3>\r\n            <TimePicker\r\n              defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n              open={this.state.open_end_time}\r\n              onOpenChange={open => this.handleOpenChange(open, 'end_time')}\r\n              onChange={(time, timeString) =>\r\n                this.handleTime(time, timeString, 'end_time')\r\n              }\r\n              addon={() => (\r\n                <Button\r\n                  size='small'\r\n                  type='primary'\r\n                  onClick={() => this.handleClose('end_time')}\r\n                >\r\n                  Ok\r\n                </Button>\r\n              )}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <h3> Set Password For Test (Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked\r\n              onChange={value => {\r\n                this.setState({ set_password: value });\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h3> Do You Want To Shuffle Questions(Yes/No) </h3>\r\n            <Switch\r\n              defaultChecked\r\n              onChange={value => {\r\n                this.setState({ shuffle_required: value });\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {this.state.UploadingData === true ? (\r\n          <Button\r\n            size={'large'}\r\n            type='primary'\r\n            loading={this.state.UploadingData}\r\n          >\r\n            Creating Test\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            width='100%'\r\n            type='primary'\r\n            size={'large'}\r\n            onClick={this.handleCreateTest}\r\n          >\r\n            Create Test\r\n          </Button>\r\n        )}\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Form, Input, Button, Select, Row, Col, Icon, Spin } from 'antd';\r\nimport { encoded_data } from '../../../encoded_data';\r\nimport Alert from '../../Alert';\r\nimport './index.css';\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      formLayout: 'horizontal',\r\n      options: [],\r\n      correct_option_index: null,\r\n      test_id: '',\r\n      pic: null,\r\n      UploadingData: false,\r\n      showModal: false,\r\n      modal_title: '',\r\n      modal_message: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ test_id: this.props.test_id });\r\n  }\r\n\r\n  makeShowModalFalse = () => {\r\n    this.setState({ showModal: false, UploadingData: false });\r\n  };\r\n\r\n  validateForm = () => {\r\n    let validateOptions = () => {\r\n      for (let i = 0; i < this.state.options.length; i++) {\r\n        if (this.state.options[i].english_text === '') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    const { english_text, correct_option_index, options } = this.state;\r\n    if (english_text === '') {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Type The Question'\r\n      });\r\n      return false;\r\n    } else if (options.length === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Make Options'\r\n      });\r\n      return false;\r\n    } else if (validateOptions() === false) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill All The Options'\r\n      });\r\n      return false;\r\n    } else if (correct_option_index === 0) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Please Fill Correct Option Field'\r\n      });\r\n      return false;\r\n    } else if (\r\n      correct_option_index > options.length ||\r\n      correct_option_index < 1\r\n    ) {\r\n      this.setState({\r\n        showModal: true,\r\n        modal_title: 'Requirements',\r\n        modal_message: 'Invalid Option'\r\n      });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        this.setState({\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  handleOptionChange = (index, event) => {\r\n    event.persist();\r\n    let object = {};\r\n    let found = false;\r\n    for (let i = 0; i < encoded_data.length; i++) {\r\n      if (event.target.value.indexOf(encoded_data[i].name) !== -1) {\r\n        found = true;\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value.replace(\r\n            encoded_data[i].name,\r\n            encoded_data[i].js_code\r\n          )\r\n        });\r\n        break;\r\n      }\r\n    }\r\n    if (!found) {\r\n      if (event.target.name === 'english_text') {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value,\r\n          hindi_text: event.target.value\r\n        });\r\n      } else {\r\n        object = Object.assign(this.state.options[index], {\r\n          [event.target.name]: event.target.value\r\n        });\r\n      }\r\n    }\r\n    this.setState(state => ({ [state.options[index]]: object }));\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ sub_category_id: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.validateForm() === true) {\r\n      let custome_url = `tests/add_testQuestion_without_image/${endurl}`;\r\n      this.setState({ UploadingData: true });\r\n      let formData = new FormData();\r\n      const sendData = {\r\n        test_id: this.state.test_id,\r\n        english_text: this.state.english_text,\r\n        hindi_text: this.state.hindi_text,\r\n        options: this.state.options,\r\n        correct_option_index: this.state.correct_option_index\r\n      };\r\n      formData.append('SendData', JSON.stringify(sendData));\r\n      if (this.state.pic !== null) {\r\n        custome_url = `tests/add_testQuestion_with_image/${endurl}`;\r\n        formData.append('question_image', this.state.pic);\r\n      }\r\n      fetch(baseurl + custome_url, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.props.IncrementQuestion();\r\n          this.setState({\r\n            UploadingData: false,\r\n            english_text: '',\r\n            hindi_text: '',\r\n            formLayout: 'horizontal',\r\n            options: [],\r\n            correct_option_index: null,\r\n            pic: null,\r\n            showModal: true,\r\n            modal_title: 'Confirmation',\r\n            modal_message: 'Question Added Successfully'\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            showModal: true,\r\n            modal_title: 'Server Error',\r\n            modal_message: 'Please Contact To Technical Team'\r\n          });\r\n          console.log(err);\r\n        });\r\n    } else {\r\n    }\r\n  };\r\n\r\n  handleFile = e => {\r\n    this.setState({ pic: e.target.files[0] });\r\n  };\r\n\r\n  handleAppendButton = () => {\r\n    const newOption = {\r\n      english_text: '',\r\n      hindi_text: '',\r\n      question_id: ''\r\n    };\r\n    this.setState(state => ({\r\n      options: state.options.concat(newOption)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    const buttonItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            wrapperCol: { span: 14, offset: 4 }\r\n          }\r\n        : null;\r\n\r\n    return (\r\n      <div className='box'>\r\n        <center>\r\n          <h1>Add Question</h1>\r\n        </center>\r\n        <hr />\r\n        <Form\r\n          layout={formLayout}\r\n          action='#'\r\n          method='post'\r\n          encType='multipart/form-data'\r\n        >\r\n          <Form.Item label='Question' {...formItemLayout}>\r\n            <Row>\r\n              <Col span={10}>\r\n                <TextArea\r\n                  name='english_text'\r\n                  value={this.state.english_text}\r\n                  rows={4}\r\n                  placeholder='In English'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n              <Col span={10} offset={1}>\r\n                <TextArea\r\n                  name='hindi_text'\r\n                  value={this.state.hindi_text}\r\n                  rows={4}\r\n                  placeholder='In Hindi'\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <div style={{ float: 'right', paddingRight: '10%' }}>\r\n            <Button type='primary' onClick={this.handleAppendButton}>\r\n              Add Option\r\n              <Icon type='plus-square' />\r\n            </Button>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {this.state.options.map((option, index) => {\r\n            return (\r\n              <QuestionOption\r\n                key={index}\r\n                option={option}\r\n                index={index}\r\n                handleOptionChange={this.handleOptionChange}\r\n              />\r\n            );\r\n          })}\r\n          <Form.Item label='Correct Option' {...formItemLayout}>\r\n            <Input\r\n              type={`number`}\r\n              max={this.state.options.length}\r\n              min={1}\r\n              value={this.state.correct_option_index}\r\n              onChange={this.handleChange}\r\n              name='correct_option_index'\r\n            />\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n            <Button type='primary'>\r\n              <input\r\n                type='file'\r\n                onChange={e => this.handleFile(e)}\r\n                style={{\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  background: 'transparent',\r\n                  borderRadius: 5\r\n                }}\r\n              />\r\n            </Button>\r\n          </Form.Item>\r\n          <Form.Item {...buttonItemLayout}>\r\n            <Button\r\n              type='primary'\r\n              loading={this.state.UploadingData}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        {this.state.showModal === true ? (\r\n          <Alert\r\n            makeShowModalFalse={this.makeShowModalFalse}\r\n            title={this.state.modal_title}\r\n            message={this.state.modal_message}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formLayout: 'horizontal'\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const { formLayout } = this.state;\r\n    const formItemLayout =\r\n      formLayout === 'horizontal'\r\n        ? {\r\n            labelCol: { span: 4 },\r\n            wrapperCol: { span: 14 }\r\n          }\r\n        : null;\r\n    return (\r\n      <Form.Item label={`Option ${this.props.index + 1}`} {...formItemLayout}>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Input\r\n              value={this.props.option.english_text}\r\n              size='large'\r\n              name='english_text'\r\n              placeholder='Type In English'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n          <Col span={10} offset={1}>\r\n            <Input\r\n              value={this.props.option.hindi_text}\r\n              size='large'\r\n              name='hindi_text'\r\n              placeholder='Type In Hindi'\r\n              onChange={event =>\r\n                this.props.handleOptionChange(this.props.index, event)\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport AddQuestion from '../AddQuestion/index';\r\nexport default class ShowTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      test_id: '',\r\n      no_of_questions: 0\r\n    };\r\n  }\r\n\r\n  IncrementQuestion = () => {\r\n    this.setState(state => ({ no_of_questions: state.no_of_questions + 1 }));\r\n  };\r\n\r\n  handleAddQuestion = () => {\r\n    let newQuestionItem = { test_id: this.state.test_id };\r\n    this.setState(state => ({\r\n      questions: state.questions.concat({ newQuestionItem })\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ test_id: this.props.test._id });\r\n  }\r\n\r\n  render() {\r\n    let test = this.props.test;\r\n    return (\r\n      <>\r\n        <div style={{ paddingTop: '5%' }}>\r\n          <center>\r\n            <h1>{test.english_title}</h1>\r\n          </center>\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.test_commence_date}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.test_commence_time}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {moment\r\n                .utc(parseInt(test.test_allowed_time_in_seconds * 1000))\r\n                .format('HH:mm:ss')}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>No Of Days For Which Test Will be Online</h3>\r\n              &nbsp;&nbsp;&nbsp;&nbsp; {test.test_online_no_of_days}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Is Password Set For This Test ??</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.set_password === 'true' ? 'Yes' : 'No'}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Will Questions Be In Shuffle Order ??</h3>\r\n              &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n              {test.shuffle_required === 'true' ? 'Yes' : 'No'}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp;{' '}\r\n              {this.state.no_of_questions}\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <Button\r\n                type='primary'\r\n                shape='round'\r\n                icon='download'\r\n                size={'large'}\r\n                onClick={this.handleAddQuestion}\r\n              >\r\n                Add Question\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        {this.state.questions.length === 0 ? (\r\n          <div> </div>\r\n        ) : (\r\n          <div>\r\n            {this.state.questions.map((question, index) => {\r\n              return (\r\n                <AddQuestion\r\n                  IncrementQuestion={this.IncrementQuestion}\r\n                  test_id={this.state.test_id}\r\n                  key={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport MakeTest from '../MakeTest/index'\r\nimport ShowTest from '../ShowTest/index'\r\n\r\nexport default class MakeTestWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testCreated : false,\r\n            createdTest : {}\r\n        }\r\n    }\r\n    createTest = (createdTest) => {\r\n        this.setState({ testCreated : true , createdTest : createdTest })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testCreated === false){\r\n            return <MakeTest createTest = {this.createTest} />\r\n        } else {\r\n            return <ShowTest test = {this.state.createdTest} />\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Collapse, Icon } from 'antd';\r\nimport { baseurl, endurl } from '../../baseurl';\r\n\r\nconst { Panel } = Collapse;\r\nexport default class AllQuestions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      questions: []\r\n    };\r\n  }\r\n\r\n  makeQuestions;\r\n\r\n  componentDidMount() {\r\n    let test_id = this.props.test_id;\r\n    fetch(`${baseurl}tests/fetch_test_questions_by_test_id/${test_id}/p`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ questions: data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <></>\r\n      //   <Collapse\r\n      //     bordered={false}\r\n      //     defaultActiveKey={['1']}\r\n      //     expandIcon={({ isActive }) => (\r\n      //       <Icon type='caret-right' rotate={isActive ? 90 : 0} />\r\n      //     )}\r\n      //   >\r\n      //     {/* {this.state.questions.map((index, item) => {\r\n      //       return (\r\n      //         <Panel\r\n      //           header=  { item}\r\n      //           key='1'\r\n      //           style={customPanelStyle}\r\n      //         ></Panel>\r\n      //       );\r\n      //     })} */}\r\n      //   </Collapse>\r\n    );\r\n  }\r\n}\r\n\r\nconst customPanelStyle = {\r\n  background: '#f7f7f7',\r\n  borderRadius: 4,\r\n  marginBottom: 24,\r\n  border: 0,\r\n  overflow: 'hidden'\r\n};\r\n","import React from 'react';\r\nimport { Row, Col, Button, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport AddQuestion from '../AddQuestion/index';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport AllQuestions from '../AllQuestionsList';\r\nexport default class ShowTestById extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      test_id: '',\r\n      no_of_questions: 0,\r\n      test: {},\r\n      loading: false\r\n    };\r\n  }\r\n\r\n  IncrementQuestion = () => {\r\n    this.setState(state => ({ no_of_questions: state.no_of_questions + 1 }));\r\n  };\r\n\r\n  handleAddQuestion = () => {\r\n    let newQuestionItem = { test_id: this.state.test_id };\r\n    this.setState(state => ({\r\n      questions: state.questions.concat({ newQuestionItem })\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    let id = this.props.match.params.id;\r\n    fetch(`${baseurl}tests/fetch_test_by_id/${id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          test: data,\r\n          loading: false,\r\n          test_id: data._id,\r\n          no_of_questions: parseInt(data.count)\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    let test = this.state.test;\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div style={{ paddingTop: '5%' }}>\r\n            <center>\r\n              <h1>{test.english_title}</h1>\r\n            </center>\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.test_commence_date}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.test_commence_time}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {moment\r\n                  .utc(parseInt(test.test_allowed_time_in_seconds * 1000))\r\n                  .format('HH:mm:ss')}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Test End Time</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.end_time}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>Is Password Set For This Test ??</h3>{' '}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.set_password === 'true'\r\n                  ? 'Yes'.toUpperCase()\r\n                  : 'No'.toUpperCase()}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <h3>Will Questions Be In Shuffle Order ??</h3>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;{' '}\r\n                {test.shuffle_required === 'true'\r\n                  ? 'Yes'.toUpperCase()\r\n                  : 'No'.toUpperCase()}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Row style={{ paddingLeft: '10%' }}>\r\n              <Col span={10} offset={2}>\r\n                <h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp;{' '}\r\n                {this.state.no_of_questions}\r\n              </Col>\r\n              <Col span={10} offset={2}>\r\n                <Button\r\n                  type='primary'\r\n                  shape='round'\r\n                  icon='download'\r\n                  size={'large'}\r\n                  onClick={this.handleAddQuestion}\r\n                >\r\n                  Add Question\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          {this.state.questions.length === 0 ? (\r\n            <div> </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.questions.map((question, index) => {\r\n                return (\r\n                  <AddQuestion\r\n                    IncrementQuestion={this.IncrementQuestion}\r\n                    test_id={this.state.test_id}\r\n                    key={index}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          <AllQuestions test_id={this.props.match.params.id} />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { List, Button, Skeleton, Text } from 'antd';\r\nimport moment from 'moment';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\nimport ShowTestById from '../ShowTestById';\r\n\r\nclass AllTestComponent extends React.Component {\r\n  state = {\r\n    initLoading: true,\r\n    loading: false,\r\n    data: [],\r\n    list: []\r\n  };\r\n\r\n  getData = callback => {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        callback(data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData(res => {\r\n      this.setState({\r\n        initLoading: false,\r\n        data: res,\r\n        list: res\r\n      });\r\n    });\r\n  }\r\n\r\n  isOnline = obj => {\r\n    let end_date_time = obj.test_commence_date + ' ' + obj.end_time;\r\n    let start_date_Time = obj.test_commence_date + ' ' + obj.test_commence_time;\r\n    start_date_Time = moment(start_date_Time);\r\n    end_date_time = moment(end_date_time);\r\n    let currentDateTime = moment(\r\n      new Date().toLocaleString('en-US', { timeZone: 'Asia/Kolkata' })\r\n    );\r\n\r\n    var difference_with_start_time = currentDateTime.diff(\r\n      start_date_Time,\r\n      'seconds'\r\n    );\r\n\r\n    var range = end_date_time.diff(start_date_Time, 'seconds');\r\n    if (difference_with_start_time < 0) {\r\n      return 'Yet To Start';\r\n    } else if (difference_with_start_time > range) {\r\n      return 'Test Is Finished';\r\n    } else {\r\n      return 'Presently Online';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let match = this.props.match;\r\n    const { initLoading, loading, list } = this.state;\r\n    const loadMore =\r\n      !initLoading && !loading ? (\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n            marginTop: 12,\r\n            height: 32,\r\n            lineHeight: '32px'\r\n          }}\r\n        />\r\n      ) : null;\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div style={{ padding: '5%' }}>\r\n          <center>\r\n            <h1>\r\n              <u>List Of All Tests</u>\r\n            </h1>\r\n          </center>\r\n          <List\r\n            className='demo-loadmore-list'\r\n            loading={initLoading}\r\n            itemLayout='horizontal'\r\n            dataSource={list}\r\n            renderItem={item => (\r\n              <List.Item\r\n                actions={[<Link to={`${match.url}/${item._id}`}>Edit</Link>]}\r\n              >\r\n                <Skeleton avatar title={false} loading={item.loading} active>\r\n                  <List.Item.Meta\r\n                    title={\r\n                      <div style={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {item.english_title}\r\n                      </div>\r\n                    }\r\n                    description={\r\n                      <div>\r\n                        <h3>\r\n                          {moment(item.test_commence_date).format(\r\n                            'Do MMM ddd YYYY'\r\n                          )}\r\n                        </h3>\r\n                        <h4>Commence Time : {item.test_commence_time}</h4>\r\n                      </div>\r\n                    }\r\n                  />\r\n                  <div>\r\n                    Current Status : &nbsp;&nbsp;&nbsp;\r\n                    <h3>{this.isOnline(item)}</h3>\r\n                  </div>\r\n                </Skeleton>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class AllTest extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={props => <AllTestComponent {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/:id`}\r\n              render={props => <ShowTestById {...props} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, DatePicker, Select, Spin, Button } from 'antd';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport moment from 'moment';\r\nconst { Option } = Select;\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction ResultTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.selected_test_id === '') {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>Results Will Be Displayed Here </h5>\r\n      </div>\r\n    );\r\n  } else if (props.results.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No Results Found Yet</h5>\r\n      </div>\r\n    );\r\n  } else if (props.results.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            {Object.keys(props.results[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.results.map((item, key) => {\r\n            return <CustomRow row={item} key={key} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Results extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_test_date: '',\r\n      all_tests: [],\r\n      filtered_tests: [],\r\n      results: [],\r\n      selected_test_id: '',\r\n      results: [],\r\n      loading_results: false\r\n    };\r\n  }\r\n\r\n  handle_refresh = () => {\r\n    if (this.state.selected_test_id === '') {\r\n      alert('Please Choose Test ....');\r\n    } else {\r\n      this.refreshResult();\r\n    }\r\n  };\r\n\r\n  refreshResult = () => {\r\n    this.setState({ loading_results: true });\r\n    fetch(`${baseurl}tests/results/${this.state.selected_test_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ results: data, loading_results: false }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ all_tests: data, filtered_tests: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  filter_tests_by_date = date => {\r\n    let filtered_tests = this.state.all_tests.filter(item => {\r\n      return item.test_commence_date === moment(date).format('YYYY-MM-DD');\r\n    });\r\n    if (filtered_tests.length !== 0) {\r\n      this.setState({ filtered_tests: filtered_tests });\r\n    } else {\r\n      this.setState({ filtered_tests: this.state.all_tests });\r\n    }\r\n  };\r\n\r\n  handle_date_change = date => {\r\n    this.setState({ test_date: date });\r\n    this.filter_tests_by_date(date);\r\n  };\r\n\r\n  onSelectTest = async _id => {\r\n    await this.setState({ selected_test_id: _id });\r\n    this.refreshResult();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Select Date </h3>\r\n            <DatePicker onChange={this.handle_date_change} />\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose Test</h3>\r\n            <Select\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.filtered_tests.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Test Results Found</h3>\r\n            <br />\r\n            <h5>{this.state.results.length}</h5>\r\n          </Col>\r\n          <Col span={10} offset={2}>\r\n            <h3>Click To Refresh</h3>\r\n            <br />\r\n            <Button type='primary' onClick={this.handle_refresh}>\r\n              Refresh\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <ResultTable\r\n          results={this.state.results}\r\n          loading={this.state.loading_results}\r\n          selected_test_id={this.state.selected_test_id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\n\r\nimport { Row, Col, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class Set_Demo_Test extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tests: [],\r\n      updating_data: false,\r\n      selected_test_ids: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${baseurl}tests/fetch_all_test/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => this.setState({ tests: data }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onSelectTest = async _id_array => {\r\n    this.setState({ selected_test_ids: _id_array });\r\n  };\r\n\r\n  handleSave = () => {\r\n    this.setState({ updating_data: true });\r\n    fetch(`${baseurl}tests/set_demo_test/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state.selected_test_ids)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ updating_data: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ paddingTop: '5%' }}>\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            <h3>Choose Test For Demo Test </h3>\r\n            <Select\r\n              mode='multiple'\r\n              showSearch\r\n              style={{ width: 200 }}\r\n              placeholder='Select a Test'\r\n              optionFilterProp='children'\r\n              onChange={this.onSelectTest}\r\n              filterOption={(input, option) =>\r\n                option.props.children\r\n                  .toLowerCase()\r\n                  .indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              {this.state.tests.map((item, key) => {\r\n                return (\r\n                  <Option key={item._id} value={item._id}>\r\n                    {item.english_title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row style={{ paddingLeft: '10%' }}>\r\n          <Col span={10} offset={2}>\r\n            {this.state.updating_data === true ? (\r\n              <Button\r\n                size={'large'}\r\n                type='primary'\r\n                loading={this.state.UploadingData}\r\n              >\r\n                Saving ...\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                width='100%'\r\n                type='primary'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Your Choice\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\n\r\nimport EditTest from './EditTest/index';\r\nimport TestStatus from './TestStatus/index';\r\nimport TestHistory from './TestHistory/index';\r\nimport MakeTestWrapper from './MakeTestWrapper/index';\r\nimport AllTest from './AllTest/index';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport Results from './Results';\r\nimport Set_Demo_Test from './Set_Demo_Test/index';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nexport default class Test extends React.Component {\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout>\r\n            <Sider width={'20%'} style={{ background: '#fff' }}>\r\n              <Menu\r\n                theme='dark'\r\n                mode='inline'\r\n                style={{ height: '100%', borderRight: 0 }}\r\n              >\r\n                <SubMenu\r\n                  key='sub1'\r\n                  title={\r\n                    <span>\r\n                      <Icon type='folder-open' />\r\n                      Manage Test\r\n                    </span>\r\n                  }\r\n                >\r\n                  <Menu.Item key='1'>\r\n                    <Link to={`${match.url}/make_test`}>Make New Test</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='2'>\r\n                    <Link to={`${match.url}/all_tests`}>All Tests</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='3'>\r\n                    <Link to={`${match.url}/results`}>Results</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='4'>\r\n                    <Link to={`${match.url}/edit_test`}>Edit Test</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='5'>\r\n                    <Link to={`${match.url}/set_demo_test`}>\r\n                      Set Demo Test{' '}\r\n                    </Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='6'>\r\n                    <Link to={`${match.url}/test_status`}>Test Status</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='7'>\r\n                    <Link to={`${match.url}/test_history`}>Tests History</Link>\r\n                  </Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content>\r\n              <Switch>\r\n                <Route\r\n                  path={`${match.url}/make_test`}\r\n                  render={props => <MakeTestWrapper {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/all_tests`}\r\n                  render={props => <AllTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/results`}\r\n                  render={props => <Results {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/edit_test`}\r\n                  render={props => <EditTest {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/set_demo_test`}\r\n                  render={props => <Set_Demo_Test {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/test_status`}\r\n                  render={props => <TestStatus {...props} />}\r\n                />\r\n                <Route\r\n                  path={`${match.url}/test_history`}\r\n                  render={props => <TestHistory {...props} />}\r\n                />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../../baseurl';\r\nimport { Spin, Row, Col, Button, Switch } from 'antd';\r\n\r\nexport default class UpdateStudentPermissions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      student_data: {},\r\n      uploading_data: false\r\n    };\r\n  }\r\n\r\n  handleSave = () => {\r\n    this.setState({ uploading_data: true });\r\n    let sendData = this.state.student_data;\r\n    fetch(`${baseurl}students/update_permission/${endurl}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(sendData)\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ updating: false });\r\n        if (data.code === 'success') {\r\n          alert('Updated Successfully ....');\r\n          this.props.history.goBack();\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  componentDidMount() {\r\n    let student_id = this.props.match.params.student_id;\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}students/show_by_id/${student_id}/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ student_data: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleChange = (switch_type, value) => {\r\n    let student_data = this.state.student_data;\r\n    let new_student_data = {};\r\n    switch (switch_type) {\r\n      case 'pdf_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          pdf_allowed: value.toString()\r\n        });\r\n        break;\r\n      case 'online_test_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          online_test_allowed: value.toString()\r\n        });\r\n        break;\r\n      case 'offline_test_allowed':\r\n        new_student_data = Object.assign(student_data, {\r\n          offline_test_allowed: value.toString()\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ student_data: new_student_data });\r\n  };\r\n\r\n  render() {\r\n    const data = this.state.student_data;\r\n    if (this.state.loading === true) {\r\n      return (\r\n        <div style={{ padding: '15%', paddingLeft: '50%' }}>\r\n          <Spin size='large' />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div style={{ paddingTop: '5%' }}>\r\n          <center>\r\n            <h1>{}</h1>\r\n          </center>\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Name </h3> &nbsp;<h5>{data.name}</h5>\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Email Id </h3>&nbsp;<h5>{data.email_id}</h5>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Pdf Allowed(No/Yes)</h3> &nbsp;\r\n              <Switch\r\n                onChange={value => this.handleChange('pdf_allowed', value)}\r\n                defaultChecked={data.pdf_allowed === 'true'}\r\n              />\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <h3>Online Test Allowed(No/Yes)</h3> &nbsp;\r\n              <Switch\r\n                onChange={value =>\r\n                  this.handleChange('online_test_allowed', value)\r\n                }\r\n                defaultChecked={data.online_test_allowed === 'true'}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row style={{ paddingLeft: '10%' }}>\r\n            <Col span={10} offset={2}>\r\n              <h3>Offline Tes Allowed(No/Yes)</h3> &nbsp; {}\r\n              <Switch\r\n                defaultChecked={data.offline_test_allowed === 'true'}\r\n                onChange={value =>\r\n                  this.handleChange('offline_test_allowed', value)\r\n                }\r\n              />\r\n            </Col>\r\n            <Col span={10} offset={2}>\r\n              <Button\r\n                type='primary'\r\n                shape='round'\r\n                icon='save'\r\n                size={'large'}\r\n                onClick={this.handleSave}\r\n              >\r\n                Save Permissions\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../baseurl';\r\nimport { Button } from 'antd';\r\n\r\nexport default class UpdatePaymentStatus extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      updating: false\r\n    };\r\n  }\r\n\r\n  handleUpdate = () => {\r\n    this.setState({ updating: true });\r\n    fetch(`${baseurl}students/update_payment_status/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ updating: false });\r\n        if (data.code === 'success') {\r\n          alert('Payment Status Is Updated .');\r\n        } else {\r\n          alert('Payment Status Is Not Updated Due To Any Technical Reason .');\r\n        }\r\n      })\r\n      .catch(err => alert('Technical Error'));\r\n  };\r\n\r\n  render() {\r\n    if (this.state.updating === true) {\r\n      return (\r\n        <Button type='primary' size={'large'} loading>\r\n          Updating Payment Status\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button type='primary' size={'large'} onClick={this.handleUpdate}>\r\n          Click To Update Payment Status\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Button, Modal, Row, Col, DatePicker, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nexport default class ManageCashPayment extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posting_data: false,\r\n      pack_id: null,\r\n      payment_date: '',\r\n      message: '',\r\n      amount: ''\r\n    };\r\n  }\r\n\r\n  handlePayment = () => {\r\n    if (\r\n      this.state.selected_pack_id === null ||\r\n      this.state.payment_date === ''\r\n    ) {\r\n      this.setState({ message: 'Please Fill All Fields ....' });\r\n    } else {\r\n      this.setState({ posting_data: true });\r\n      fetch(baseurl + `payment/create_cash_payment/` + endurl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ ...this.state, student_id: this.props._id })\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            posting_data: false\r\n          });\r\n          alert('Payment Created...');\r\n          this.props.make_payment_not_visible();\r\n        })\r\n        .catch(err => {\r\n          alert('Tecnical Error .. ');\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  handleDate = (date, dateString) => {\r\n    this.setState({ payment_date: dateString });\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ pack_id: value });\r\n    switch (value) {\r\n      case 1:\r\n        this.setState({ amount: '100' });\r\n        break;\r\n      case 2:\r\n        this.setState({ amount: '300' });\r\n        break;\r\n      case 3:\r\n        this.setState({ amount: '500' });\r\n        break;\r\n      default:\r\n        console.log('Impossible Event ');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        centered\r\n        title='Create New Payment'\r\n        style={{ top: 20 }}\r\n        width={720}\r\n        visible={this.props.payment_visible}\r\n        onOk={() => this.handlePayment(this.props._id)}\r\n        onCancel={() => this.props.make_payment_not_visible()}\r\n      >\r\n        <Row>\r\n          <Col span={10}>\r\n            <h4> Select Package </h4>\r\n            <Select\r\n              defaultValue='Choose Pack'\r\n              style={{ width: 220 }}\r\n              onChange={this.handleChange}\r\n            >\r\n              <Option value={1}>Silver-Pack 100 Rs (1 Month) </Option>\r\n              <Option value={2}>Gold-Pack 300 Rs (4 Months)</Option>\r\n              <Option value={3}>Platinum-Pack 500 Rs (6 Months)</Option>\r\n            </Select>\r\n          </Col>\r\n          <Col offset={2} span={10}>\r\n            <h4> Choose Payment Date </h4>\r\n            <DatePicker onChange={this.handleDate} />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col span={10}></Col>\r\n          <Col offset={2} span={10}>\r\n            {!this.state.posting_data ? (\r\n              <Button onClick={this.handlePayment}>\r\n                Click Me To Create Payment\r\n              </Button>\r\n            ) : (\r\n              <Button loading>Creating Payment ...</Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <h5 style={{ color: 'red' }}>{this.state.message}</h5>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin, Button } from 'antd';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  Link\r\n} from 'react-router-dom';\r\nimport UpdateStudentPermissions from './UpdateStudentPermissions';\r\nimport UpdatePaymentStatus from '../Update_Payment_Status';\r\nimport ManageCashPayment from '../ManageStudents/ManageCashPayment';\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n      <td>\r\n        <Button type='primary' size={'large'}>\r\n          <Link to={`${props.match.url}/${props.row._id}`}>\r\n            Click To See And Edit\r\n          </Link>\r\n        </Button>\r\n      </td>\r\n      <td>\r\n        <Button\r\n          type='primary'\r\n          size={'large'}\r\n          onClick={() => {\r\n            props.set_student_id(props.row._id);\r\n            props.make_payment_visible();\r\n          }}\r\n        >\r\n          Create New Payment\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction StudentsTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.students.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No students Found</h5>\r\n      </div>\r\n    );\r\n  } else if (props.students.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            {Object.keys(props.students[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n            <th style={{ position: 'sticky', top: 0, zIndex: 10 }} scope='col'>\r\n              Permissions\r\n            </th>\r\n            <th style={{ position: 'sticky', top: 0, zIndex: 10 }} scope='col'>\r\n              New Cash Payment\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.students.map((item, key) => {\r\n            return (\r\n              <CustomRow\r\n                set_student_id={props.set_student_id}\r\n                make_payment_visible={props.make_payment_visible}\r\n                match={props.match}\r\n                row={item}\r\n                key={key}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nclass AllStudents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      students: [],\r\n      payment_visible: false,\r\n      selected_student_id: null\r\n    };\r\n  }\r\n\r\n  make_payment_visible = () => {\r\n    this.setState({ payment_visible: true });\r\n  };\r\n\r\n  make_payment_not_visible = () => {\r\n    this.setState({ payment_visible: false });\r\n  };\r\n\r\n  set_student_id = _id => {\r\n    this.setState({ selected_student_id: _id });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}students/show_all/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ students: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <UpdatePaymentStatus />\r\n        <ManageCashPayment\r\n          _id={this.state.selected_student_id}\r\n          payment_visible={this.state.payment_visible}\r\n          make_payment_not_visible={this.make_payment_not_visible}\r\n        />\r\n        <StudentsTable\r\n          make_payment_visible={this.make_payment_visible}\r\n          set_student_id={this.set_student_id}\r\n          match={this.props.match}\r\n          loading={this.state.loading}\r\n          students={this.state.students}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ManageStudents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path={`${match.url}`}\r\n              render={props => <AllStudents {...props} />}\r\n            />\r\n            <Route\r\n              path={`${match.url}/:student_id`}\r\n              render={props => <UpdateStudentPermissions {...props} />}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin } from 'antd';\r\n\r\nfunction CustomRow(props) {\r\n  return (\r\n    <tr>\r\n      {Object.values(props.row).map((item, key) => {\r\n        return <td key={key}>{item}</td>;\r\n      })}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction EnquiryTable(props) {\r\n  if (props.loading === true) {\r\n    return (\r\n      <div style={{ padding: '20%', paddingLeft: '50%' }}>\r\n        <Spin size='large' />\r\n      </div>\r\n    );\r\n  } else if (props.enquiries.length === 0) {\r\n    return (\r\n      <div style={{ padding: '35%', paddingTop: '5%' }}>\r\n        <h5>No Enquiries Found</h5>\r\n      </div>\r\n    );\r\n  } else if (props.enquiries.length !== 0) {\r\n    return (\r\n      <table className='table'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            <th>Count : </th>\r\n            <td>{props.enquiries.length}</td>\r\n          </tr>\r\n          <tr>\r\n            {Object.keys(props.enquiries[0]).map((item, key) => {\r\n              return (\r\n                <th\r\n                  key={key}\r\n                  style={{ position: 'sticky', top: 0, zIndex: 10 }}\r\n                  scope='col'\r\n                >\r\n                  {item}\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.enquiries.map((item, key) => {\r\n            return <CustomRow row={item} key={key} />;\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Enquiry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      enquiries: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    fetch(`${baseurl}enquiry/show_all/${endurl}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ enquiries: data, loading: false });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  render() {\r\n    return (\r\n      <EnquiryTable\r\n        loading={this.state.loading}\r\n        enquiries={this.state.enquiries}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport WorkSheets from '../WorkSheets/index';\r\nimport PdfManaging from '../PdfManaging/index';\r\nimport UpdateAuthorize from '../UpdateAuthorize';\r\nimport Test from '../Test/index';\r\nimport ManageStudents from '../ManageStudents/index';\r\n\r\nimport {\r\n  Redirect,\r\n  Link,\r\n  Route,\r\n  Switch,\r\n  HashRouter as Router\r\n} from 'react-router-dom';\r\n\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport './index.css';\r\nimport Enquiry from '../Enquiry';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class DashBoard extends React.Component {\r\n  componentWillMount() {\r\n    if (this.props.match.url === '/') {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n  render() {\r\n    if (localStorage.getItem('authenticated') === 'true') {\r\n      let match = this.props.match;\r\n      return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Layout>\r\n            <Header className='header'>\r\n              <div className='logo' />\r\n              <Menu\r\n                theme='dark'\r\n                mode='horizontal'\r\n                style={{ lineHeight: '64px', paddingLeft: '18%' }}\r\n              >\r\n                <Menu.Item key='1'>\r\n                  <Link to={`${match.url}/worksheets`}>\r\n                    <Icon type='file-sync' />\r\n                    Manage Worksheets\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='2'>\r\n                  <Link to={`${match.url}/tests`}>\r\n                    <Icon type='reconciliation' />\r\n                    Manage Tests\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='3'>\r\n                  <Link to={`${match.url}/updates`}>\r\n                    <Icon type='sync' />\r\n                    Manage Updates\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='4'>\r\n                  <Link to={`${match.url}/pdfs`}>\r\n                    <Icon type='sync' />\r\n                    Manage Pdf Files\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='5'>\r\n                  <Link to={`${match.url}/students`}>\r\n                    <Icon type='sync' />\r\n                    Manage Students\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key='6'>\r\n                  <Link to={`${match.url}/enquiry`}>\r\n                    <Icon type='sync' />\r\n                    Enquiries\r\n                  </Link>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Header>\r\n            <Switch>\r\n              <Route\r\n                path={`${match.url}/worksheets`}\r\n                render={props => <WorkSheets {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/tests`}\r\n                render={props => <Test {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/updates`}\r\n                render={props => <UpdateAuthorize {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/pdfs`}\r\n                render={props => <PdfManaging {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/students`}\r\n                render={props => <ManageStudents {...props} />}\r\n              />\r\n              <Route\r\n                path={`${match.url}/enquiry`}\r\n                render={props => <Enquiry {...props} />}\r\n              />\r\n            </Switch>\r\n          </Layout>\r\n        </Router>\r\n      );\r\n    } else {\r\n      return <Redirect to={{ pathname: '/login' }} />;\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class Login  extends React.Component {\r\n    handleLogin = () => {\r\n        localStorage.setItem(\"authenticated\" , \"true\")\r\n        this.props.history.push('/dashboard')\r\n    }\r\n    render() {\r\n        return(\r\n        <div>\r\n            <button onClick = {() => this.handleLogin()}> Click To Login </button>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DashBoard from './DashBoard/index'\r\nimport Login from './Login'\r\nimport { Switch , Route , Link  ,  HashRouter as Router  } from 'react-router-dom'\r\n\r\nexport default class Main extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n     <Router basename = {process.env.PUBLIC_URL}> \r\n        <Switch>\r\n            <Route exact path = '/' render = {(props) => <DashBoard {...props} />} />\r\n            <Route exact path = '/login' render = {(props) => <Login {...props} />} />\r\n            <Route path = '/dashboard' render = {(props) => <DashBoard {...props} />} />\r\n        </Switch>  \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n","\n\n\nimport React from 'react'\nimport Main from './components/Main.js'\nimport './App.css';\n\nexport default class App extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {}\n  render() {\n    return (\n      <Main />  \n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter , HashRouter  } from 'react-router-dom';\n\nReactDOM.render(\n<HashRouter basename = {process.env.PUBLIC_URL} >\n  <App />\n</HashRouter>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}