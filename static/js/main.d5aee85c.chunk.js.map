{"version":3,"sources":["baseurl.js","components/Alert.js","components/WorkSheets/AddCategory/index.js","components/WorkSheets/AddSubCategory/index.js","components/WorkSheets/AddQuestion/index.js","components/WorkSheets/index.js","components/PdfManaging/UploadPdf/index.js","components/PdfManaging/index.js","components/DashBoard/index.js","components/Login.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["baseurl","endurl","Alert","state","visible","showModal","_this","setState","handleOk","e","props","makeShowModalFalse","handleCancel","this","react_default","a","createElement","modal","title","onOk","onCancel","message","React","Component","AddCategory","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","UploadingData","handleChange","event","defineProperty","target","name","value","handleSubmit","english_name","modal_message","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","hindi_name","catch","err","console","log","formLayout","modal_title","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","es_form","layout","Item","assign","label","input","placeholder","onChange","es_button","type","loading","onClick","Alert_Alert","Fragment","Option","Select","AddSubCategory","handleFile","logo","files","handleSelectChange","category_id","formData","FormData","append","all_categories","_this2","_this3","length","spin","es_select","showSearch","style","width","optionFilterProp","filterOption","option","children","toLowerCase","indexOf","map","category","_id","key","color","backgroundColor","background","borderRadius","TextArea","Input","AddQuestion","validateForm","_this$state","sub_category_id","english_text","correct_option_index","options","i","validateOptions","handleOptionChange","index","persist","object","custome_url","sendData","hindi_text","pic","handleAppendButton","newOption","question_id","all_sub_categories","action","encType","sub_category","AddQuestion_Option","size","row","col","rows","float","paddingRight","icon","AddQuestion_QuestionOption","max","min","QuestionOption","_this4","_this5","SubMenu","Menu","Content","Layout","Header","Sider","WorkSheets","localStorage","getItem","match","BrowserRouter","menu","theme","mode","height","borderRight","Link","to","url","Switch","Route","path","render","AddCategory_AddCategory","AddSubCategory_AddSubCategory","AddQuestion_AddQuestion","Redirect","pathname","UploadPdf","pdf","parseInt","fileprogress","axios","request","onUploadProgress","p","loaded","total","UploadPdf_Option","progress","percent","status","PdfManaging","PdfManaging_Sider","PdfManaging_SubMenu","PdfManaging_Content","UploadPdf_UploadPdf","DashBoard","history","push","DashBoard_Header","className","lineHeight","paddingLeft","WorkSheets_WorkSheets","PdfManaging_PdfManaging","Login","handleLogin","setItem","Main","exact","DashBoard_DashBoard","Login_Login","App","Main_Main","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5aee85c.chunk.js","sourcesContent":["//export const baseurl = 'http://localhost:3000/'\r\nexport const baseurl = 'https://aaaacedmy2.herokuapp.com/'\r\nexport const endurl = 'pg'","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nexport default class Alert extends React.Component {\r\n    state = { visible: false }\r\n    componentDidMount(){\r\n      this.setState({ visible : true})\r\n    }\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    }\r\n  \r\n    handleOk = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    handleCancel = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Modal\r\n            title= {this.props.title}\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <p>{this.props.message}</p>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from 'react'\r\n\r\nimport {\r\n    Form, Input, Button\r\n} from 'antd';\r\n\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport Alert from '../../Alert.js'\r\n\r\n\r\nexport default class AddCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : ''\r\n      };\r\n    }\r\n  \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n            this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Category Name In English Is Required\"})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/add_category/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n                <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin \r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class AddSubCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_categories : [],\r\n        category_id : 0,\r\n        logo : null,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ logo : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({ category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        } else if(this.state.logo === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Logo'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"sub_category_image\" , this.state.logo)\r\n            fetch(baseurl+`categories_and_sub_categories/add_sub_category/${endurl}` , {\r\n                method : 'POST',\r\n                body : formData\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Sub Category Added Successfully... '}))\r\n            .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Sub  Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_categories.map(category => {\r\n                    return(\r\n                        <Option value = {`${category._id}`} key = {category._id}>{category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Sub Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Sub  Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Logo ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Row, Col , Icon ,  Spin \r\n} from 'antd';\r\n \r\nimport Alert from '../../Alert'\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            \"all_sub_categories\" : [],\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            UploadingData : false,\r\n            showModal : false,\r\n            modal_title : '',\r\n            modal_message : '',\r\n            type : ''\r\n        }\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    validateForm = () => {\r\n      let validateOptions = () => {\r\n        for(let i = 0 ; i  < this.state.options.length ; i++){\r\n          if(this.state.options[i].english_text === '' ){\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      }\r\n      const { sub_category_id , english_text , correct_option_index , options , type } = this.state\r\n      if(sub_category_id === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        return false\r\n      }else if(type === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Enter Type '})\r\n        return false\r\n      }else if(english_text === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Type The Question'})\r\n        return false\r\n      }else if(options.length === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Make Options'})\r\n        return false\r\n      }\r\n      else if(validateOptions() === false){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill All The Options'})\r\n         return false\r\n      }else if(correct_option_index === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill Correct Option Field'})\r\n        return false\r\n      }else if(correct_option_index > options.length || correct_option_index < 1){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Invalid Option'})\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n      this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleOptionChange = (index , event) => {\r\n        event.persist()\r\n        let object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value})\r\n        this.setState(state => ({ [state.options[index]] : object}))\r\n    }\r\n    \r\n    handleSelectChange = (value) => {\r\n      this.setState({ sub_category_id : value })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        \r\n        if(this.validateForm() === true){\r\n          let custome_url = `questions/add_without_image/${endurl}`\r\n          this.setState({ UploadingData : true})\r\n          let formData = new FormData()\r\n          const sendData = {\r\n            \"english_text\" : this.state.english_text,\r\n            \"hindi_text\" : this.state.hindi_text,\r\n            options : this.state.options,\r\n            correct_option_index : this.state.correct_option_index,\r\n            sub_category_id : this.state.sub_category_id,\r\n            type : this.state.type\r\n          }\r\n          formData.append(\"SendData\" , JSON.stringify(sendData))\r\n          if(this.state.pic !== null ){\r\n          custome_url = `questions/add_with_image/${endurl}`;  \r\n          formData.append(\"question_image\" , this.state.pic)}\r\n          fetch(baseurl+custome_url , {\r\n              method : 'POST',\r\n              body : formData\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {this.setState({ UploadingData : false ,\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            showModal : true,\r\n            modal_title : 'Confirmation',\r\n            modal_message : 'Question Added Successfully'});})\r\n          .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact To Technical Team'});console.log(err)})\r\n      } else {}\r\n    }\r\n\r\n    handleFile = (e) => {\r\n      this.setState({ pic : e.target.files[0]})\r\n    }\r\n\r\n    handleAppendButton = () => {\r\n        const newOption = {\r\n          \"english_text\" : '',\r\n          \"hindi_text\" : '',\r\n          \"question_id\" : ''\r\n        }\r\n        this.setState(state => ({\r\n          options : state.options.concat(newOption)\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n\r\n        return (\r\n          <div>\r\n            <center><h1>Add Question</h1></center>\r\n            <Form layout={formLayout} action = '#' method = 'post'  encType = 'multipart/form-data'  >\r\n              <Form.Item\r\n                label=\"Select Sub Category\"\r\n                {...formItemLayout}\r\n              >  \r\n                {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Sub Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n                </Select>)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Enter Type\"\r\n                {...formItemLayout}>\r\n                  <Input size=\"large\" name = \"type\" placeholder=\"Enter Type\" onChange = {this.handleChange} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Question\"\r\n                {...formItemLayout}>\r\n                <Row>\r\n                    <Col span={10}><TextArea name = \"english_text\" value = {this.state.english_text} rows={4} placeholder = \"In English\" onChange = {this.handleChange} /></Col>\r\n                    <Col span={10} offset={1}><TextArea name = \"hindi_text\" value = {this.state.hindi_text} rows={4} placeholder = \"In Hindi\" onChange = {this.handleChange} /></Col>\r\n                </Row>\r\n              </Form.Item>\r\n              <div style = {{ float : \"right\" , paddingRight : \"10%\"}}>\r\n                <Button  type=\"primary\" onClick = {this.handleAppendButton} >\r\n                    Add Option<Icon type=\"plus-square\" />\r\n                </Button>\r\n              </div>\r\n              <br/>\r\n              <br/>\r\n              {this.state.options.map((option,index) => {\r\n                return <QuestionOption key = {index} option = {option} index = {index} handleOptionChange = {this.handleOptionChange} />\r\n              })}\r\n              <Form.Item label=\"Correct Option\"\r\n                {...formItemLayout}>\r\n                <Input type = {`number`} max = {this.state.options.length} min = {1}\r\n                value = {this.state.correct_option_index} onChange = {this.handleChange} name = 'correct_option_index'  />\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}  >\r\n                Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}>\r\n                  <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_text : ''\r\n    }\r\n  }\r\n  componentDidMount(){}\r\n  \r\n  render(){\r\n    const { formLayout } = this.state;\r\n            const formItemLayout = formLayout === 'horizontal' ? {\r\n              labelCol: { span: 4 },\r\n              wrapperCol: { span: 14 },\r\n            } : null;\r\n            const buttonItemLayout = formLayout === 'horizontal' ? {\r\n              wrapperCol: { span: 14, offset: 4 },\r\n            } : null;\r\n     return(\r\n      <Form.Item label = {`Option ${this.props.index + 1}`}\r\n      {...formItemLayout}>\r\n      <Row>\r\n          <Col span={10}><Input size=\"large\" name = \"english_text\" placeholder=\"Type In English\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n          <Col span={10} offset={1}><Input size=\"large\" name = \"hindi_text\" placeholder=\"Type In Hindi\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n      </Row>\r\n    </Form.Item>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  BrowserRouter as Router} from 'react-router-dom'\r\nimport AddCategory from './AddCategory/index'\r\nimport AddSubCategory from './AddSubCategory/index'\r\nimport AddQuestions from './AddQuestion/index'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class WorkSheets extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router>   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"folder-open\" />Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_category`} >Add Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\">All Categories</Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" title={<span><Icon type=\"folder-open\" />Sub Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_sub_category`} >Add Sub Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\">All Sub Categories</Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Sub  Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Sub  Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub3\" title={<span><Icon type=\"question-circle\" />Questions</span>}>\r\n                    <Menu.Item key=\"9\"><Link to = {`${match.url}/add_questions`} > Add Questions </Link></Menu.Item>\r\n                    <Menu.Item key=\"10\">All Questions</Menu.Item>\r\n                    <Menu.Item key=\"11\">Edit Questions</Menu.Item>\r\n                    <Menu.Item key=\"12\">Delete Questions</Menu.Item>\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/add_category`} render = {props => <AddCategory {...props} />} />\r\n                    <Route  path = {`${match.url}/add_sub_category`} render = {props => <AddSubCategory {...props}/>} />\r\n                    <Route  path = {`${match.url}/add_questions`} render = {props => <AddQuestions {...props}/>} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin , Progress\r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nimport axios from 'axios';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class UploadPdf extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_sub_categories : [],\r\n        sub_category_id : 0,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false,\r\n        pdf : null,\r\n        fileprogress : 0\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ pdf : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        for( let i = 0 ;  i < this.state.all_sub_categories.length ; i++ ){\r\n            if(this.state.all_sub_categories[i]._id === parseInt(value)){\r\n                this.setState({ english_name : this.state.all_sub_categories[i].english_name})\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ sub_category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.sub_category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Sub  Category'})\r\n        } else if(this.state.pdf === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Pdf File'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true , fileprogress : 0})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"pdf\" , this.state.pdf)\r\n            // fetch(baseurl+`pdf/upload_pdf/${endurl}` , {\r\n            //     method : 'POST',\r\n            //     body : formData\r\n            // })\r\n            // .then((res) => res.json())\r\n            // .then((data) => this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '}))\r\n            // .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n            axios.request( {\r\n                method: \"post\", \r\n                url: baseurl+`pdf/upload_pdf/${endurl}`, \r\n                data: formData, \r\n                onUploadProgress: (p) => {\r\n                  this.setState({\r\n                    fileprogress: p.loaded / p.total\r\n                  })\r\n                }\r\n            }).then (data => {\r\n            this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '})    \r\n            this.setState({\r\n                fileprogress: 1.0,\r\n            })\r\n            }).catch((err) => {\r\n                this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); \r\n                console.log(err)\r\n            })\r\n        \r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Upload Pdf</h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Sub Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub  Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Pdf In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf  Name (Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Pdf Name In Hindi\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n            </Form.Item>\r\n            <Progress percent= {this.state.fileprogress * 100} status=\"active\" />\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Upload\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  BrowserRouter as Router} from 'react-router-dom'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport UploadPdf from '../PdfManaging/UploadPdf/index'\r\n\r\nconst { SubMenu } = Menu;\r\nconst {  Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class PdfManaging extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router>   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                <SubMenu key=\"sub3\" title={<span><Icon type=\"question-circle\" />Pdf Files</span>}>\r\n                    <Menu.Item key=\"9\"><Link to = {`${match.url}/upload_pdfs`} > Upload Pdf Files </Link></Menu.Item>\r\n                    <Menu.Item key=\"10\">All Pdfs </Menu.Item>\r\n                    <Menu.Item key=\"11\">Edit Pdf Files</Menu.Item>\r\n                    <Menu.Item key=\"12\">Delete Pdf Files</Menu.Item>\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/upload_pdfs`} render = {props => <UploadPdf {...props} />} />\r\n                    <Route  path = {`${match.url}/all_pdfs`} render = {props => <h1>List All Pdfs</h1>} />\r\n                    <Route  path = {`${match.url}/edit_pdf`} render = {props => <h1>Edit List All Pdfs</h1>} />\r\n                    <Route  path = {`${match.url}/delete_pdf`} render = {props => <h1>Delete</h1>} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router> \r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport WorkSheets from '../WorkSheets/index'\r\nimport PdfManaging from '../PdfManaging/index'\r\nimport { Redirect , Link , Route , Switch ,  BrowserRouter as Router  } from 'react-router-dom'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport  './index.css'\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nexport default class DashBoard extends React.Component {\r\n  componentWillMount(){\r\n      if(this.props.match.url === '/'){\r\n        this.props.history.push('/dashboard')\r\n      }\r\n  }  \r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router >   \r\n            <Layout>\r\n                <Header className=\"header\">\r\n                <div className=\"logo\" />\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    style={{ lineHeight: '64px' , paddingLeft : '18%' }}\r\n                >\r\n                    <Menu.Item key=\"1\"><Link to={`${match.url}/worksheets`}><Icon type=\"file-sync\" />Manage Worksheets</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\"><Link to={`${match.url}/tests`}><Icon type=\"reconciliation\" />Manage Tests</Link></Menu.Item>\r\n                    <Menu.Item key=\"3\"><Link to={`${match.url}/updates`}><Icon type=\"sync\" />Manage Updates</Link></Menu.Item>\r\n                    <Menu.Item key=\"4\"><Link to={`${match.url}/pdfs`}><Icon type=\"sync\" />Manage Pdf Files</Link></Menu.Item>\r\n                </Menu>\r\n                </Header>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/worksheets`} render = {props => <WorkSheets {...props} />} />\r\n                    <Route  path = {`${match.url}/tests`} render = {props => <h1>Tests</h1>} />\r\n                    <Route  path = {`${match.url}/updates`} render = {props => <h1>Updates</h1>} />\r\n                    <Route  path = {`${match.url}/pdfs`} render = {props => <PdfManaging {...props} />} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default class Login  extends React.Component {\r\n    handleLogin = () => {\r\n        localStorage.setItem(\"authenticated\" , \"true\")\r\n        this.props.history.push('/dashboard')\r\n    }\r\n    render() {\r\n        return(\r\n        <div>\r\n            <button onClick = {() => this.handleLogin()}> Click To Login </button>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DashBoard from './DashBoard/index'\r\nimport Login from './Login'\r\nimport { Switch , Route , Link  ,  BrowserRouter as Router  } from 'react-router-dom'\r\n\r\nexport default class Main extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n     <Router> \r\n      <Switch>\r\n            <Route exact path = '/' render = {(props) => <DashBoard {...props} />} />\r\n            <Route exact path = '/login' render = {(props) => <Login {...props} />} />\r\n            <Route path = '/dashboard' render = {(props) => <DashBoard {...props} />} />\r\n        </Switch>  \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n","\n\n\nimport React from 'react'\nimport Main from './components/Main.js'\nimport './App.css';\n\nexport default class App extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {}\n  render() {\n    return (\n      <Main />  \n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter , HashRouter  } from 'react-router-dom';\n\nReactDOM.render(\n<BrowserRouter >\n  <App />\n</BrowserRouter>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}