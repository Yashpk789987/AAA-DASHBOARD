{"version":3,"sources":["baseurl.js","components/Alert.js","components/WorkSheets/AddCategory/index.js","components/WorkSheets/AddSubCategory/index.js","encoded_data.js","components/WorkSheets/AddQuestion/index.js","components/WorkSheets/ShowSubCategoryById.js","components/WorkSheets/AllSubCategory/index.js","components/WorkSheets/index.js","components/PdfManaging/UploadPdf/index.js","components/PdfManaging/index.js","components/Test/EditTest/index.js","components/Test/TestStatus/index.js","components/Test/TestHistory/index.js","components/Test/MakeTest/index.js","components/Test/AddQuestion/index.js","components/Test/ShowTest/index.js","components/Test/MakeTestWrapper/index.js","components/Test/ShowTestById/index.js","components/Test/AllTest/index.js","components/Test/index.js","components/DashBoard/index.js","components/Login.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["baseurl","endurl","Alert","state","visible","showModal","_this","setState","handleOk","e","props","makeShowModalFalse","handleCancel","this","react_default","a","createElement","modal","title","onOk","onCancel","message","React","Component","AddCategory","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","UploadingData","handleChange","event","defineProperty","target","name","value","handleSubmit","english_name","modal_message","fetch","concat","method","headers","Content-Type","body","JSON","stringify","then","res","json","data","hindi_name","catch","err","console","log","formLayout","modal_title","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","es_form","layout","Item","assign","label","input","placeholder","onChange","es_button","type","loading","onClick","Alert_Alert","Fragment","Option","Select","AddSubCategory","handleFile","logo","files","handleSelectChange","category_id","formData","FormData","append","all_categories","_this2","_this3","length","spin","es_select","showSearch","style","width","optionFilterProp","filterOption","option","children","toLowerCase","indexOf","map","category","_id","key","color","backgroundColor","background","borderRadius","encoded_data","js_code","TextArea","Input","AddQuestion","validateForm","_this$state","sub_category_id","english_text","correct_option_index","options","i","validateOptions","found","replace","handleOptionChange","index","persist","object","custome_url","sendData","hindi_text","pic","handleAppendButton","newOption","question_id","all_sub_categories","action","encType","sub_category","AddQuestion_Option","size","row","col","rows","float","paddingRight","icon","AddQuestion_QuestionOption","max","min","QuestionOption","_this4","_this5","ShowSubCategoryById","categories","uploading_logo","handleChooseImage","handleUpdateLogo","alert","image_url","handleDataUpdate","id","match","params","padding","paddingLeft","labelInValue","defaultValue","item","ShowSubCategoryById_Option","height","src","alt","AllSubCategoryComponent","loading_categories","loading_subcategories","subcategories","HashRouter","basename","process","paddingTop","paddingBottom","AllSubCategory_Option","es_list","itemLayout","dataSource","renderItem","Meta","avatar","shape","Link","marginRight","to","url","AllSubCategory","localStorage","getItem","Switch","Route","exact","path","render","AllSubCategory_AllSubCategoryComponent","ShowSubCategoryById_ShowSubCategoryById","Redirect","pathname","SubMenu","Menu","Content","Layout","Header","Sider","WorkSheets","menu","theme","mode","borderRight","AddCategory_AddCategory","AddSubCategory_AddSubCategory","AddQuestion_AddQuestion","AllSubCategory_AllSubCategory","UploadPdf","pdf","parseInt","fileprogress","axios","request","onUploadProgress","p","loaded","total","UploadPdf_Option","progress","percent","status","PdfManaging","PdfManaging_Sider","PdfManaging_SubMenu","PdfManaging_Content","UploadPdf_UploadPdf","EditTest","TestStatus","TestHistory","handleTime","time","timeString","field","test_duration_in_seconds","moment","duration","asSeconds","toString","test_commence_time","handleDate","date","dateString","test_commence_date","handleOpenChange","open","open_commence_time","open_test_duration","handleClose","test_created","createTest","created_test","handleCreateTest","english_title","test_online_no_of_days","test","hindi_title","date_picker","time_picker","onOpenChange","addon","test_id","IncrementQuestion","className","AddQuestion_TextArea","Test_AddQuestion_QuestionOption","ShowTest","no_of_questions","handleAddQuestion","newQuestionItem","questions","utc","test_allowed_time_in_seconds","format","question","Test_AddQuestion_AddQuestion","MakeTestWrapper","createdTest","testCreated","MakeTest_AddCategory","ShowTest_ShowTest","ShowTestById","count","AllTestComponent","initLoading","list","getData","callback","isOnline","item_date","item_time","allowed_days","allowed_days_in_seconds","dateTime","diff","Date","textAlign","marginTop","lineHeight","actions","skeleton","active","fontWeight","fontSize","description","AllTest","AllTest_AllTestComponent","ShowTestById_ShowTestById","Test","Test_Sider","Test_SubMenu","Test_Content","MakeTestWrapper_MakeTestWrapper","AllTest_AllTest","EditTest_EditTest","TestStatus_TestStatus","TestHistory_TestHistory","DashBoard","history","push","DashBoard_Header","WorkSheets_WorkSheets","Test_Test","PdfManaging_PdfManaging","Login","handleLogin","setItem","Main","DashBoard_DashBoard","Login_Login","App","Main_Main","Boolean","window","location","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc2581e9.chunk.js","sourcesContent":["export const baseurl = 'http://localhost:3000/'\r\n//export const baseurl = 'https://aaaacedmy2.herokuapp.com/'\r\nexport const endurl = 'pg'","import React from 'react'\r\nimport { Modal } from 'antd'\r\n\r\nexport default class Alert extends React.Component {\r\n    state = { visible: false }\r\n    componentDidMount(){\r\n      this.setState({ visible : true})\r\n    }\r\n    showModal = () => {\r\n      this.setState({\r\n        visible: true,\r\n      });\r\n    }\r\n  \r\n    handleOk = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    handleCancel = (e) => {\r\n      this.props.makeShowModalFalse()\r\n      this.setState({\r\n        visible: false,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <Modal\r\n            title= {this.props.title}\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n            <p>{this.props.message}</p>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from 'react'\r\n\r\nimport {\r\n    Form, Input, Button\r\n} from 'antd';\r\n\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport Alert from '../../Alert.js'\r\n\r\n\r\nexport default class AddCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : ''\r\n      };\r\n    }\r\n  \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n    \r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n            this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Category Name In English Is Required\"})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/add_category/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n                <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                  Submit\r\n                </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin \r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class AddSubCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_categories : [],\r\n        category_id : 0,\r\n        logo : null,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ logo : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({ category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        } else if(this.state.logo === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Logo'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"sub_category_image\" , this.state.logo)\r\n            fetch(baseurl+`categories_and_sub_categories/add_sub_category/${endurl}` , {\r\n                method : 'POST',\r\n                body : formData\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( { english_name : '' , hindi_name : '' , category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Sub Category Added Successfully... '}))\r\n            .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Add Sub  Category </h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_categories.map(category => {\r\n                    return(\r\n                        <Option value = {`${category._id}`} key = {category._id}>{category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Sub Category In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Sub Category Name(Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Sub  Category In English\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Logo ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","export const encoded_data =  [{ name : 'theta' ,  js_code : '\\u03B8' } , { name : 'angle' ,  js_code : '\\u2220' } , \r\n{ name : 'degree' ,  js_code : '\\u00B0' } , { name : 'alpha' , js_code : \"\\u03B1\" } , \r\n{ name : 'beta' , js_code : \"\\u03B2\" } , { name : 'gamma' , js_code : \"\\u03B3\" } , { name : 'delta' , \r\n js_code : '\\u0394'} ]","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Row, Col , Icon ,  Spin \r\n} from 'antd';\r\n \r\nimport Alert from '../../Alert'\r\n\r\nimport { encoded_data } from '../../../encoded_data'\r\n\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\nexport default class AddQuestion extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            \"all_sub_categories\" : [],\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            UploadingData : false,\r\n            showModal : false,\r\n            modal_title : '',\r\n            modal_message : '',\r\n            type : ''\r\n        }\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    validateForm = () => {\r\n      let validateOptions = () => {\r\n        for(let i = 0 ; i  < this.state.options.length ; i++){\r\n          if(this.state.options[i].english_text === '' ){\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      }\r\n      const { sub_category_id , english_text , correct_option_index , options , type } = this.state\r\n      if(sub_category_id === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Category'})\r\n        return false\r\n      }else if(type === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Enter Type '})\r\n        return false\r\n      }else if(english_text === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Type The Question'})\r\n        return false\r\n      }else if(options.length === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Make Options'})\r\n        return false\r\n      }\r\n      else if(validateOptions() === false){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill All The Options'})\r\n         return false\r\n      }else if(correct_option_index === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill Correct Option Field'})\r\n        return false\r\n      }else if(correct_option_index > options.length || correct_option_index < 1){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Invalid Option'})\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        let found = false ;\r\n        for(let i = 0 ; i < encoded_data.length ; i++){\r\n          if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n            found = true\r\n            this.setState({ [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code) })  \r\n            break ;\r\n          }\r\n        }\r\n        if(!found){\r\n          this.setState({ [event.target.name] : event.target.value })  \r\n        }\r\n    }\r\n\r\n    handleOptionChange = (index , event) => {\r\n      event.persist();\r\n      let object = {};\r\n      let found = false ;\r\n      for(let i = 0 ; i < encoded_data.length ; i++){\r\n        if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n          found = true\r\n          object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code)})\r\n          break ;\r\n        }\r\n      }\r\n      if(!found){\r\n         object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value})\r\n      }\r\n      this.setState(state => ({ [state.options[index]] : object}))\r\n    }\r\n  \r\n\r\n    handleSelectChange = (value) => {\r\n      this.setState({ sub_category_id : value })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        if(this.validateForm() === true){\r\n          let custome_url = `questions/add_without_image/${endurl}`\r\n          this.setState({ UploadingData : true})\r\n          let formData = new FormData()\r\n          const sendData = {\r\n            \"english_text\" : this.state.english_text,\r\n            \"hindi_text\" : this.state.hindi_text,\r\n            options : this.state.options,\r\n            correct_option_index : this.state.correct_option_index,\r\n            sub_category_id : this.state.sub_category_id,\r\n            type : this.state.type\r\n          }\r\n          formData.append(\"SendData\" , JSON.stringify(sendData))\r\n          if(this.state.pic !== null ){\r\n          custome_url = `questions/add_with_image/${endurl}`;  \r\n          formData.append(\"question_image\" , this.state.pic)}\r\n          fetch(baseurl+custome_url , {\r\n              method : 'POST',\r\n              body : formData\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {this.setState({ UploadingData : false ,\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            sub_category_id : 0,\r\n            pic : null , \r\n            showModal : true,\r\n            modal_title : 'Confirmation',\r\n            modal_message : 'Question Added Successfully'});})\r\n          .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact To Technical Team'});console.log(err)})\r\n      } else {}\r\n    }\r\n\r\n    handleFile = (e) => {\r\n      this.setState({ pic : e.target.files[0]})\r\n    }\r\n\r\n    handleAppendButton = () => {\r\n        const newOption = {\r\n          \"english_text\" : '',\r\n          \"hindi_text\" : '',\r\n          \"question_id\" : ''\r\n        }\r\n        this.setState(state => ({\r\n          options : state.options.concat(newOption)\r\n        }))\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n\r\n        return (\r\n          <div>\r\n            <center><h1>Add Question</h1></center>\r\n            <Form layout={formLayout} action = '#' method = 'post'  encType = 'multipart/form-data'  >\r\n              <Form.Item\r\n                label=\"Select Sub Category\"\r\n                {...formItemLayout}\r\n              >  \r\n                {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Sub Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n                </Select>)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Enter Type\"\r\n                {...formItemLayout}>\r\n                  <Input size=\"large\" name = \"type\" placeholder=\"Enter Type\" onChange = {this.handleChange} />\r\n              </Form.Item>\r\n              <Form.Item label=\"Question\"\r\n                {...formItemLayout}>\r\n                <Row>\r\n                    <Col span={10}><TextArea name = \"english_text\" value = {this.state.english_text} rows={4} placeholder = \"In English\" onChange = {this.handleChange} /></Col>\r\n                    <Col span={10} offset={1}><TextArea name = \"hindi_text\" value = {this.state.hindi_text} rows={4} placeholder = \"In Hindi\" onChange = {this.handleChange} /></Col>\r\n                </Row>\r\n              </Form.Item>\r\n              <div style = {{ float : \"right\" , paddingRight : \"10%\"}}>\r\n                <Button  type=\"primary\" onClick = {this.handleAppendButton} >\r\n                    Add Option<Icon type=\"plus-square\" />\r\n                </Button>\r\n              </div>\r\n              <br/>\r\n              <br/>\r\n              {this.state.options.map((option,index) => {\r\n                return <QuestionOption key = {index} option = {option} index = {index} handleOptionChange = {this.handleOptionChange} />\r\n              })}\r\n              <Form.Item label=\"Correct Option\"\r\n                {...formItemLayout}>\r\n                <Input type = {`number`} max = {this.state.options.length} min = {1}\r\n                value = {this.state.correct_option_index} onChange = {this.handleChange} name = 'correct_option_index'  />\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}  >\r\n                Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}>\r\n                  <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_text : ''\r\n    }\r\n  }\r\n  componentDidMount(){}\r\n  \r\n  render(){\r\n    const { formLayout } = this.state;\r\n            const formItemLayout = formLayout === 'horizontal' ? {\r\n              labelCol: { span: 4 },\r\n              wrapperCol: { span: 14 },\r\n            } : null;\r\n            const buttonItemLayout = formLayout === 'horizontal' ? {\r\n              wrapperCol: { span: 14, offset: 4 },\r\n            } : null;\r\n     return(\r\n      <Form.Item label = {`Option ${this.props.index + 1}`}\r\n      {...formItemLayout}>\r\n      <Row>\r\n          <Col span={10}><Input value = {this.props.option.english_text} size=\"large\" name = \"english_text\" placeholder=\"Type In English\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n          <Col span={10} offset={1}><Input value = {this.props.option.hindi_text} size=\"large\" name = \"hindi_text\" placeholder=\"Type In Hindi\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n      </Row>\r\n    </Form.Item>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { baseurl, endurl } from '../../baseurl';\r\nimport { Spin , Row , Col , Input , Select , Button } from 'antd';\r\nimport Alert from '../Alert';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\nexport default class ShowSubCategoryById extends React.Component {\r\n    state = {\r\n        _id : '',\r\n        loading : false ,\r\n        english_name : '',\r\n        hindi_name : '',\r\n        category_id : '',\r\n        logo : '',\r\n        categories : [],\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : '',\r\n        uploading_logo :  null\r\n    }\r\n\r\n    makeShowModalFalse = () => {\r\n        this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    componentDidMount(){\r\n      let id = this.props.match.params.id\r\n      this.setState({ loading : true  , _id :  id })\r\n      fetch(`${baseurl}categories_and_sub_categories/fetch_sub_category_by_id/${id}/${endurl}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {this.setState({ english_name : data.english_name , hindi_name : data.hindi_name , category_id : data.category_id , logo : data.logo })\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {this.setState({categories : data , loading : false})})\r\n        .catch((err) => console.log(err))\r\n      })\r\n      .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({ category_id : value })\r\n    }\r\n\r\n    handleChooseImage = (e) => {\r\n        this.setState({ uploading_logo : e.target.files[0] })\r\n    }\r\n\r\n    handleUpdateLogo = () => {\r\n        if(this.state.uploading_logo === null){\r\n            alert(\"Please Choose Image ....\")\r\n        } else {\r\n            this.setState({ UploadingData : true })\r\n            let sendData = new FormData()\r\n            sendData.append('_id' , this.state._id)\r\n            sendData.append('logo' , this.state.uploading_logo )\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/update_sub_category_image/${endurl}` , {\r\n                method : 'POST',\r\n                body : sendData\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( {  showModal : true , title : 'Confirmation' , modal_message : data.message , logo : data.image_url }))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    handleDataUpdate = () => {\r\n        if(this.state.english_name === ''){\r\n            alert(\"English Name Cannot Be Empty\")\r\n        } else {\r\n            this.setState({ UploadingData : true })\r\n            fetch(baseurl+`categories_and_sub_categories/update_sub_category_data/${endurl}` , {\r\n                method : 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body : JSON.stringify(this.state)\r\n            })\r\n            .then((res) => res.json())\r\n            .then((data) => this.setState( {  showModal : true , title : 'Confirmation' , modal_message : data.message}))\r\n            .catch(err => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n       }\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loading === true){\r\n            return (\r\n            <div style = {{ padding : '15%' , paddingLeft : '50%'}}>\r\n                <Spin size=\"large\" />\r\n            </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div style = {{ padding : '5%'}} >\r\n                    <Row>\r\n                      <Col span={6}  >\r\n                      <b>Category</b><br/>\r\n                      <Select\r\n                        showSearch\r\n                        style={{ width: 200 }}\r\n                        placeholder=\"Select Category\"\r\n                        optionFilterProp=\"children\"\r\n                        labelInValue \r\n                        defaultValue={{ key: this.state.category_id }}\r\n                        onChange={this.handleChange}\r\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                      >\r\n                        {this.state.categories.map((item, index) => {\r\n                           return (<Option key = {item._id} value={item._id}>{item.english_name}</Option>)\r\n                        })}\r\n                      </Select>\r\n                      </Col>\r\n                      <Col span={6} offset = {1} ><b>Sub Category Name (English)</b><Input value = {this.state.english_name} onChange = {(e) => {this.setState({ english_name : e.target.value})}} size=\"large\" placeholder=\"large size\" /></Col>\r\n                      <Col span={6} offset = {1} ><b>Sub Category Name (Hindi)</b><Input value = {this.state.hindi_name} size=\"large\" placeholder=\"large size\" onChange = {(e) => { this.setState({ hindi_name : e.target.value}) }} /></Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span = {18}>\r\n                          <br/>\r\n                          <Button type=\"primary\" loading={this.state.UploadingData} onClick = {() => this.handleDataUpdate()}  size={\"large\"}>Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <img height = '300px' width = '400px' src  = {`${baseurl}uploads/sub_category/${this.state.logo}`} alt = {\"Not Available\"} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <h4>Choose Image To Upload</h4>\r\n                          <input type = 'file' onChange = {this.handleChooseImage} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <br/>\r\n                          <Button type=\"primary\" loading={this.state.UploadingData} onClick = {this.handleUpdateLogo}  size={\"large\"}>Update</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n  }\r\n  ","\r\nimport React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin , List , Avatar\r\n} from 'antd';\r\n\r\nimport { Link , HashRouter as Router , Switch , Route , Redirect } from  'react-router-dom'\r\nimport ShowSubCategoryById from '../ShowSubCategoryById';\r\n\r\nconst Option = Select.Option\r\n\r\n\r\nclass AllSubCategoryComponent extends React.Component {\r\n    state = {\r\n        loading_categories : false,\r\n        categories : [],\r\n        loading_subcategories : false,\r\n        subcategories : []\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({ loading_categories : true })\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_categories/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({categories : data , loading_categories : false}))\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        this.setState({ loading_categories : true })\r\n        fetch(`${baseurl}categories_and_sub_categories/sub_categories/${value}/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {this.setState({ loading_subcategories : false , subcategories : data })})\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n        return(\r\n            <Router basename = {process.env.PUBLIC_URL} >\r\n            <div style = {{ paddingLeft : '10%' , paddingTop : '3%' , paddingBottom : '3%' }}>\r\n            <center><h1>All SubCategories </h1></center>\r\n            <Form layout={formLayout}>\r\n                <Form.Item\r\n                label=\"Select Category\"\r\n                {...formItemLayout}\r\n                >\r\n                {this.state.categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                    showSearch\r\n                    style={{ width: 200 }}\r\n                    placeholder=\"Select Category \"\r\n                    optionFilterProp=\"children\"\r\n                    onChange={this.handleSelectChange}\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                > \r\n                    {this.state.categories.map(category => {\r\n                        return(\r\n                            <Option value = {`${category._id}`} key = {category._id}>{category.english_name}</Option>\r\n                        )\r\n                    })}\r\n                </Select>)}\r\n                </Form.Item>\r\n            </Form>\r\n            {this.state.loading_subcategories === true ? <Spin size=\"large\" /> : \r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={this.state.subcategories}\r\n                renderItem={item => (\r\n                <List.Item>\r\n                    <List.Item.Meta\r\n                    title={<b>{item.english_name}</b>}\r\n                    avatar = {<Avatar shape=\"square\" size=\"large\" style = {{ height : \"70%\" , width : '80%' }} src  = {`${baseurl}uploads/sub_category/${item.logo}`} />}\r\n                    />\r\n                    <Link  style = {{ paddingRight : '5%' , marginRight : '10%' }} to = {`${this.props.match.url}/${item._id}`}>\r\n                        <Button  type=\"primary\" size={\"large\"}>\r\n                          Edit\r\n                        </Button>\r\n                    </Link>\r\n                </List.Item>\r\n                )}\r\n            />\r\n            }\r\n          </div>\r\n          </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default class AllSubCategory extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {}\r\n    }\r\n    render(){\r\n      if(localStorage.getItem('authenticated') === \"true\"){  \r\n        let match = this.props.match   \r\n        return(\r\n          <Router basename = {process.env.PUBLIC_URL} >\r\n              <Switch>\r\n                <Route exact path = {`${match.url}`} render = {props => <AllSubCategoryComponent {...props} /> } />\r\n                <Route path = {`${match.url}/:id`} render = {props => <ShowSubCategoryById {...props} /> } />  \r\n              </Switch>\r\n          </Router>\r\n        )\r\n      } else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n      }  \r\n    }\r\n  }\r\n  ","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  HashRouter as Router} from 'react-router-dom'\r\nimport AddCategory from './AddCategory/index'\r\nimport AddSubCategory from './AddSubCategory/index'\r\nimport AddQuestions from './AddQuestion/index'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport AllSubCategory from './AllSubCategory/index';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class WorkSheets extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router  basename = {process.env.PUBLIC_URL} >   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"folder-open\" />Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_category`} >Add Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\">All Categories</Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" title={<span><Icon type=\"folder-open\" />Sub Categories</span>}>\r\n                    <Menu.Item key=\"1\"><Link to = {`${match.url}/add_sub_category`} >Add Sub Category</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\"><Link to = {`${match.url}/all_sub_categories`} >All Sub Categories</Link></Menu.Item>\r\n                    <Menu.Item key=\"3\">Edit Sub  Category</Menu.Item>\r\n                    <Menu.Item key=\"4\">Delete Sub  Category</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub3\" title={<span><Icon type=\"question-circle\" />Questions</span>}>\r\n                    <Menu.Item key=\"9\"><Link to = {`${match.url}/add_questions`} > Add Questions </Link></Menu.Item>\r\n                    <Menu.Item key=\"10\">All Questions</Menu.Item>\r\n                    <Menu.Item key=\"11\">Edit Questions</Menu.Item>\r\n                    <Menu.Item key=\"12\">Delete Questions</Menu.Item>\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/add_category`} render = {props => <AddCategory {...props} />} />\r\n                    <Route  path = {`${match.url}/add_sub_category`} render = {props => <AddSubCategory {...props}/>} />\r\n                    <Route  path = {`${match.url}/add_questions`} render = {props => <AddQuestions {...props}/>} />\r\n                    <Route  path = {`${match.url}/all_sub_categories`} render = {props => <AllSubCategory {...props} /> } />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Spin , Progress\r\n} from 'antd';\r\n\r\nimport Alert from '../../Alert.js'\r\nimport axios from 'axios';\r\n\r\nconst Option = Select.Option;\r\n\r\n\r\n\r\nexport default class UploadPdf extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_name : '',\r\n        hindi_name : '',\r\n        all_sub_categories : [],\r\n        sub_category_id : 0,\r\n        showModal : false,\r\n        modal_title : '' , \r\n        modal_message : '',\r\n        UploadingData : false,\r\n        pdf : null,\r\n        fileprogress : 0\r\n      };\r\n    }\r\n  \r\n    handleFile = (e) => {\r\n      this.setState({ pdf : e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    handleSelectChange = (value) => {\r\n        for( let i = 0 ;  i < this.state.all_sub_categories.length ; i++ ){\r\n            if(this.state.all_sub_categories[i]._id === parseInt(value)){\r\n                this.setState({ english_name : this.state.all_sub_categories[i].english_name})\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ sub_category_id : value })\r\n    }\r\n    componentDidMount()  {\r\n        fetch(`${baseurl}categories_and_sub_categories/fetch_all_sub_categories/${endurl}`)\r\n        .then(res => res.json())\r\n        .then(data => this.setState({ all_sub_categories : data}))\r\n        .catch(err => console.log(err))\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.english_name === ''){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Category Name In English Is Required'})\r\n        } else if(this.state.sub_category_id === 0) {\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Choose Sub  Category'})\r\n        } else if(this.state.pdf === null){\r\n          this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Upload Pdf File'})\r\n        }\r\n        else {\r\n            this.setState({ UploadingData : true , fileprogress : 0})\r\n            let formData = new FormData()\r\n            formData.append(\"SendData\" , JSON.stringify(this.state))\r\n            formData.append(\"pdf\" , this.state.pdf)\r\n            // fetch(baseurl+`pdf/upload_pdf/${endurl}` , {\r\n            //     method : 'POST',\r\n            //     body : formData\r\n            // })\r\n            // .then((res) => res.json())\r\n            // .then((data) => this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '}))\r\n            // .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); console.log(err)})\r\n            axios.request( {\r\n                method: \"post\", \r\n                url: baseurl+`pdf/upload_pdf/${endurl}`, \r\n                data: formData, \r\n                onUploadProgress: (p) => {\r\n                  this.setState({\r\n                    fileprogress: p.loaded / p.total\r\n                  })\r\n                }\r\n            }).then (data => {\r\n            this.setState( { english_name : '' , hindi_name : '' , sub_category_id : 0 , showModal : true , modal_title : 'Confirmation' , modal_message : 'Pdf Uploaded  Successfully... '})    \r\n            this.setState({\r\n                fileprogress: 1.0,\r\n            })\r\n            }).catch((err) => {\r\n                this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact Technical Team'}); \r\n                console.log(err)\r\n            })\r\n        \r\n        }\r\n    }\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div>\r\n          <center><h1>Upload Pdf</h1>  </center>\r\n          <Form layout={formLayout}>\r\n            <Form.Item\r\n              label=\"Select Sub Category\"\r\n              {...formItemLayout}\r\n            >\r\n            {this.state.all_sub_categories.length === 0 ? (<><Spin /> Loading Categories ... </>) : (<Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Select Sub  Category \"\r\n                optionFilterProp=\"children\"\r\n                onChange={this.handleSelectChange}\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            > \r\n                {this.state.all_sub_categories.map(sub_category => {\r\n                    return(\r\n                        <Option value = {`${sub_category._id}`} key = {sub_category._id}>{sub_category.english_name}</Option>\r\n                    )\r\n                })}\r\n            </Select>)}\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf Name(English)\"\r\n              {...formItemLayout}\r\n            >\r\n            <Input placeholder=\"Enter Pdf In English\" \r\n                value = {this.state.english_name}\r\n                onChange = {this.handleChange}\r\n                name = 'english_name'\r\n            />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Pdf  Name (Hindi)\"\r\n              {...formItemLayout}\r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            >\r\n            <Input placeholder=\"Enter Pdf Name In Hindi\" \r\n              value = {this.state.hindi_name}\r\n              onChange = {this.handleChange}\r\n              name = 'hindi_name'\r\n            />  \r\n            </Form.Item>\r\n            <Form.Item {...buttonItemLayout}  >\r\n                Attach Pdf File ( &nbsp;Required &nbsp;) &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n            </Form.Item>\r\n            <Progress percent= {this.state.fileprogress * 100} status=\"active\" />\r\n            <Form.Item {...buttonItemLayout}>\r\n              <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                Upload\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  HashRouter as Router} from 'react-router-dom'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport UploadPdf from '../PdfManaging/UploadPdf/index'\r\n\r\nconst { SubMenu } = Menu;\r\nconst {  Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class PdfManaging extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router basename = {process.env.PUBLIC_URL}>   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                <SubMenu key=\"sub3\" title={<span><Icon type=\"question-circle\" />Pdf Files</span>}>\r\n                    <Menu.Item key=\"9\"><Link to = {`${match.url}/upload_pdfs`} > Upload Pdf Files </Link></Menu.Item>\r\n                    <Menu.Item key=\"10\">All Pdfs </Menu.Item>\r\n                    <Menu.Item key=\"11\">Edit Pdf Files</Menu.Item>\r\n                    <Menu.Item key=\"12\">Delete Pdf Files</Menu.Item>\r\n                </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/upload_pdfs`} render = {props => <UploadPdf {...props} />} />\r\n                    <Route  path = {`${match.url}/all_pdfs`} render = {props => <h1>List All Pdfs</h1>} />\r\n                    <Route  path = {`${match.url}/edit_pdf`} render = {props => <h1>Edit List All Pdfs</h1>} />\r\n                    <Route  path = {`${match.url}/delete_pdf`} render = {props => <h1>Delete</h1>} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router> \r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default class EditTest extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>EDit Test</h1>\r\n       )\r\n   }\r\n}","import React from 'react'\r\n\r\n\r\nexport default class TestStatus extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>Test Status</h1>\r\n       )\r\n   }\r\n}","import React from 'react'\r\n\r\n\r\nexport default class TestHistory extends React.Component {\r\n   render(){\r\n       return (\r\n           <h1>TestHistory</h1>\r\n       )\r\n   }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Form, Input, Button , Row , Col , TimePicker , DatePicker \r\n} from 'antd';\r\n\r\nimport { baseurl , endurl} from '../../../baseurl'\r\nimport Alert from '../../Alert.js'\r\nimport moment from 'moment'\r\n\r\n\r\nexport default class AddCategory extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        formLayout: 'horizontal',\r\n        english_title : '',\r\n        hindi_title : '',\r\n        UploadingData : false,\r\n        showModal : false,\r\n        modal_title : '',\r\n        modal_message : '',\r\n        test_duration_in_seconds : '',\r\n        test_commence_date : '',\r\n        test_commence_time : '',\r\n        open_test_duration : false,\r\n        open_commence_time : false,\r\n        test_online_no_of_days : '',\r\n        test_created : false,\r\n        created_test : {}\r\n      };\r\n    }\r\n    \r\n    /////////////////  Handling Fields /////////////////////\r\n\r\n    handleTime = (time, timeString, field) => {\r\n        switch(field){\r\n          case 'test_duration_in_seconds':\r\n             this.setState({ test_duration_in_seconds : moment.duration(timeString).asSeconds().toString() })\r\n             break;\r\n          case 'test_commence_time':\r\n             this.setState({ test_commence_time : timeString })   \r\n             break;\r\n          default :\r\n             console.log(\"Default\")   \r\n        }\r\n    }\r\n\r\n    handleDate = (date, dateString) => {\r\n        this.setState( { test_commence_date : dateString})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n      this.setState({ [event.target.name] : event.target.value })\r\n    }\r\n\r\n    /////////////////  Handling Fields /////////////////////\r\n  \r\n    handleOpenChange = (open , field) => {\r\n        switch(field){\r\n          case 'test_commence_time' : \r\n            this.setState({ open_commence_time : open});\r\n            break;\r\n          case 'test_duration' :\r\n            this.setState({ open_test_duration : open }) \r\n            break; \r\n          default : \r\n             console.log(\"Default\")  \r\n        }\r\n    }\r\n    \r\n    handleClose = (field) => {\r\n      \r\n      switch(field){\r\n        case 'test_commence_time':\r\n            this.setState({ open_commence_time : false})\r\n            break;\r\n        case 'test_duration' :\r\n            this.setState({ open_test_duration : false }) \r\n            break;  \r\n        default :\r\n            console.log(\"Default....\")\r\n      }\r\n    \r\n    }\r\n\r\n\r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false})\r\n      if(this.state.test_created === true){\r\n        this.props.createTest(this.state.created_test)\r\n      }\r\n    }\r\n\r\n    ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n    handleCreateTest = () => {\r\n        const sendData = this.state\r\n        if(sendData.english_title === ''){\r\n          this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Title Is Required ...\"})\r\n        }else if(sendData.test_commence_date === ''){\r\n          this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Commence Date Is Required ...\"})\r\n        }else if(sendData.test_commence_time === ''){\r\n          this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Commence Time Is Required ...\"})\r\n        }else if(sendData.test_duration_in_seconds === ''){\r\n          this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Test Duration Is Required ..\"})\r\n        }else if(sendData.test_online_no_of_days === ''){\r\n          this.setState( { showModal : true , title : 'Requirements' , modal_message : \"Please Enter No Of days Is For Which You Want This Test To be Online\"})\r\n        }else {\r\n          this.setState({ UploadingData : true })\r\n          fetch(baseurl + `tests/create/` + endurl , {\r\n            method : 'POST',\r\n            headers : {\r\n              \"Content-Type\" : \"application/json\"\r\n            },\r\n            body : JSON.stringify(sendData)\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => { this.setState( { showModal : true , title : 'Confirmation' , modal_message : data.message , test_created : true , created_test : data.test})})\r\n          .catch((err) => { this.setState( { showModal : true , title : 'Server Error ' , modal_message : \"Please Contact To Technical Team \"}); console.log(err)})\r\n        }\r\n    }\r\n\r\n    ///////////////////// UPLOAD DATA ///////////////////////////////////////////////\r\n\r\n    render() {\r\n      const { formLayout } = this.state;\r\n      const formItemLayout = formLayout === 'horizontal' ? {\r\n        labelCol: { span: 4 },\r\n        wrapperCol: { span: 14 },\r\n      } : null;\r\n      const buttonItemLayout = formLayout === 'horizontal' ? {\r\n        wrapperCol: { span: 14, offset: 4 },\r\n      } : null;\r\n      return (\r\n        <div style = {{ padding : '3%'}}>\r\n          <center><h1> Make Test </h1></center>\r\n          <br/>\r\n          {/* <Form layout={formLayout}> */}\r\n           \r\n           <Row>\r\n               <Col span = {10}>\r\n                    <h3> Test Title In English</h3>\r\n                    <Input placeholder=\"Ex.  Time And Work , Speed And Distance , Profit And Loss\" \r\n                        value = {this.state.english_title}\r\n                        onChange = {this.handleChange}\r\n                        name = 'english_title'\r\n                    />\r\n                    \r\n                </Col>\r\n                <Col offset = {2} span = {10}>\r\n                    <h3 > Test Title In Hindi</h3>\r\n                    <Input placeholder=\"Ex.  Time And Work , Speed And Distance , Profit And Loss\" \r\n                        value = {this.state.hindi_title}\r\n                        onChange = {this.handleChange}\r\n                        name = 'hindi_title'\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n                <Col span = {10}>\r\n                    <h3> Test Commence Date </h3>\r\n                    <DatePicker onChange={this.handleDate} />\r\n                </Col>\r\n                <Col span = {10} offset = {2} >\r\n                    <h3>Test  Commence Time</h3>\r\n                    <TimePicker\r\n                        defaultValue={moment('00:00:00', 'HH:mm:ss')} \r\n                        open = {this.state.open_commence_time}\r\n                        onOpenChange = {(open) => this.handleOpenChange(open , 'test_commence_time')}\r\n                        onChange = {(time, timeString) => this.handleTime(time, timeString, 'test_commence_time')}\r\n                        addon={() => (\r\n                        <Button size=\"small\" type=\"primary\" onClick = {() => this.handleClose('test_commence_time')}>\r\n                            Ok\r\n                        </Button>\r\n                        )}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col span = {10}>\r\n                <h3>Test  Duration</h3>\r\n                <TimePicker\r\n                    defaultValue={moment('00:00:00', 'HH:mm:ss')} \r\n                    open = {this.state.open_test_duration}\r\n                    onOpenChange = {(open) => this.handleOpenChange(open , 'test_duration')}\r\n                    onChange = {(time, timeString) => this.handleTime(time, timeString, 'test_duration_in_seconds')}\r\n                    addon={() => (\r\n                    <Button size=\"small\" type=\"primary\" onClick={() => this.handleClose('test_duration')}>\r\n                        Ok\r\n                    </Button>\r\n                    )}\r\n                />\r\n              </Col>\r\n              <Col span = {10} offset = {2} >\r\n                <h3>No Of Days You Want To This Test Online</h3>\r\n                <Input type = 'number' min = {1}  onChange={this.handleChange} \r\n                  name = 'test_online_no_of_days'   />\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <br/>\r\n            {this.state.UploadingData === true ? <Button size={'large'}  type=\"primary\" loading={this.state.UploadingData}>Creating Test</Button> : <Button width = \"100%\" type=\"primary\" size={'large'} onClick = {this.handleCreateTest} >Create Test</Button> }\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n        </div>\r\n      );\r\n    }\r\n  } \r\n","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport {\r\n    Form, Input, Button, Select , Row, Col , Icon ,  Spin \r\n} from 'antd';\r\nimport { encoded_data } from '../../../encoded_data' \r\nimport Alert from '../../Alert'\r\nimport './index.css';\r\nconst { TextArea } = Input;\r\nconst Option = Select.Option;\r\n\r\n\r\nexport default class AddQuestion extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            test_id : '',\r\n            pic : null , \r\n            UploadingData : false,\r\n            showModal : false,\r\n            modal_title : '',\r\n            modal_message : '',\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n      this.setState({ test_id : this.props.test_id})\r\n    }\r\n    \r\n    makeShowModalFalse = () => {\r\n      this.setState({ showModal : false , UploadingData : false,})\r\n    }\r\n\r\n    validateForm = () => {\r\n      let validateOptions = () => {\r\n        for(let i = 0 ; i  < this.state.options.length ; i++){\r\n          if(this.state.options[i].english_text === '' ){\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      }\r\n      const {  english_text , correct_option_index , options ,  } = this.state\r\n      if(english_text === ''){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Type The Question'})\r\n        return false\r\n      }else if(options.length === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Make Options'})\r\n        return false\r\n      }\r\n      else if(validateOptions() === false){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill All The Options'})\r\n         return false\r\n      }else if(correct_option_index === 0){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Please Fill Correct Option Field'})\r\n        return false\r\n      }else if(correct_option_index > options.length || correct_option_index < 1){\r\n        this.setState({ showModal : true , modal_title : 'Requirements' , modal_message : 'Invalid Option'})\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n      let found = false ;\r\n      for(let i = 0 ; i < encoded_data.length ; i++){\r\n        if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n          found = true\r\n          this.setState({ [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code) })  \r\n          break ;\r\n        }\r\n      }\r\n      if(!found){\r\n        this.setState({ [event.target.name] : event.target.value })  \r\n      }\r\n    }\r\n\r\n    handleOptionChange = (index , event) => {\r\n      event.persist();\r\n      let object = {};\r\n      let found = false ;\r\n      for(let i = 0 ; i < encoded_data.length ; i++){\r\n        if(event.target.value.indexOf(encoded_data[i].name) !== -1){\r\n          found = true\r\n          object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value.replace(encoded_data[i].name,encoded_data[i].js_code)})\r\n          break ;\r\n        }\r\n      }\r\n      if(!found){\r\n         object = Object.assign(this.state.options[index] , { [event.target.name] : event.target.value})\r\n      }\r\n      this.setState(state => ({ [state.options[index]] : object}))\r\n    }\r\n    \r\n    handleSelectChange = (value) => {\r\n      this.setState({ sub_category_id : value })\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        \r\n        if(this.validateForm() === true){\r\n          \r\n          let custome_url = `tests/add_testQuestion_without_image/${endurl}`\r\n          this.setState({ UploadingData : true})\r\n          let formData = new FormData()\r\n          const sendData = {\r\n            test_id : this.state.test_id,\r\n            \"english_text\" : this.state.english_text,\r\n            \"hindi_text\" : this.state.hindi_text,\r\n            options : this.state.options,\r\n            correct_option_index : this.state.correct_option_index,\r\n          }\r\n          formData.append(\"SendData\" , JSON.stringify(sendData))\r\n          if(this.state.pic !== null ){\r\n          custome_url = `tests/add_testQuestion_with_image/${endurl}`;  \r\n          formData.append(\"question_image\" , this.state.pic)}\r\n          fetch(baseurl+custome_url , {\r\n              method : 'POST',\r\n              body : formData\r\n          })\r\n          .then((res) => res.json())\r\n          .then((data) => {this.props.IncrementQuestion();\r\n            this.setState({ UploadingData : false ,\r\n            \"english_text\" : '',\r\n            \"hindi_text\" : '',\r\n            formLayout: 'horizontal',\r\n            options : [],\r\n            correct_option_index : null,\r\n            pic : null , \r\n            showModal : true,\r\n            modal_title : 'Confirmation',\r\n            modal_message : 'Question Added Successfully'});})\r\n          .catch(err => {this.setState({showModal : true , modal_title : 'Server Error' , modal_message : 'Please Contact To Technical Team'});console.log(err)})\r\n      } else {}\r\n    }\r\n\r\n    handleFile = (e) => {\r\n      this.setState({ pic : e.target.files[0]})\r\n    }\r\n\r\n    handleAppendButton = () => {\r\n        const newOption = {\r\n          \"english_text\" : '',\r\n          \"hindi_text\" : '',\r\n          \"question_id\" : ''\r\n        }\r\n        this.setState(state => ({\r\n          options : state.options.concat(newOption)\r\n        }))\r\n    }\r\n\r\n    render(){\r\n        const { formLayout } = this.state;\r\n        const formItemLayout = formLayout === 'horizontal' ? {\r\n          labelCol: { span: 4 },\r\n          wrapperCol: { span: 14 },\r\n        } : null;\r\n        const buttonItemLayout = formLayout === 'horizontal' ? {\r\n          wrapperCol: { span: 14, offset: 4 },\r\n        } : null;\r\n\r\n        return (\r\n          <div className = \"box\">\r\n            <center><h1>Add Question</h1></center>\r\n            <hr/>\r\n            <Form layout={formLayout} action = '#' method = 'post'  encType = 'multipart/form-data'  >\r\n              <Form.Item label=\"Question\"\r\n                {...formItemLayout}>\r\n                <Row>\r\n                    <Col span={10}><TextArea name = \"english_text\" value = {this.state.english_text} rows={4} placeholder = \"In English\" onChange = {this.handleChange} /></Col>\r\n                    <Col span={10} offset={1}><TextArea name = \"hindi_text\" value = {this.state.hindi_text} rows={4} placeholder = \"In Hindi\" onChange = {this.handleChange} /></Col>\r\n                </Row>\r\n              </Form.Item>\r\n              <div style = {{ float : \"right\" , paddingRight : \"10%\"}}>\r\n                <Button  type=\"primary\" onClick = {this.handleAppendButton} >\r\n                    Add Option<Icon type=\"plus-square\" />\r\n                </Button>\r\n              </div>\r\n              <br/>\r\n              <br/>\r\n              {this.state.options.map((option,index) => {\r\n                return <QuestionOption key = {index} option = {option} index = {index} handleOptionChange = {this.handleOptionChange} />\r\n              })}\r\n              <Form.Item label=\"Correct Option\"\r\n                {...formItemLayout}>\r\n                <Input type = {`number`} max = {this.state.options.length} min = {1}\r\n                value = {this.state.correct_option_index} onChange = {this.handleChange} name = 'correct_option_index'  />\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}  >\r\n                Attach Image &nbsp; : &nbsp;&nbsp;&nbsp;\r\n                <Button  type=\"primary\" >\r\n                    <input type = 'file' onChange = {(e) => this.handleFile(e)} style = {{ color : 'white' , backgroundColor : 'transparent' , background : 'transparent' , borderRadius : 5}} />  \r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item {...buttonItemLayout}>\r\n                  <Button type=\"primary\" loading={this.state.UploadingData} onClick={this.handleSubmit}>\r\n                    Submit\r\n                  </Button>\r\n              </Form.Item>\r\n            </Form>\r\n            {this.state.showModal === true ? <Alert makeShowModalFalse = {this.makeShowModalFalse} title = {this.state.modal_title} message = {this.state.modal_message} /> : <></>}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass QuestionOption extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      formLayout: 'horizontal',\r\n      english_text : ''\r\n    }\r\n  }\r\n  componentDidMount(){}\r\n  \r\n  render(){\r\n    const { formLayout } = this.state;\r\n            const formItemLayout = formLayout === 'horizontal' ? {\r\n              labelCol: { span: 4 },\r\n              wrapperCol: { span: 14 },\r\n            } : null;\r\n     return(\r\n      <Form.Item label = {`Option ${this.props.index + 1}`}\r\n      {...formItemLayout}>\r\n      <Row>\r\n          <Col span={10}><Input value = {this.props.option.english_text} size=\"large\" name = \"english_text\" placeholder=\"Type In English\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n          <Col span={10} offset={1}><Input value = {this.props.option.hindi_text} size=\"large\" name = \"hindi_text\" placeholder=\"Type In Hindi\" onChange = {(event) => this.props.handleOptionChange(this.props.index,event)} /></Col>\r\n      </Row>\r\n    </Form.Item>\r\n     )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { Row , Col , Button } from 'antd';\r\nimport moment from 'moment'\r\nimport AddQuestion from '../AddQuestion/index'\r\nexport default class ShowTest extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            questions : [],\r\n            test_id : '',\r\n            no_of_questions : 0\r\n        }\r\n    }\r\n\r\n    IncrementQuestion = () => {\r\n        this.setState(state => ({ no_of_questions : state.no_of_questions + 1 }))\r\n    }\r\n\r\n    handleAddQuestion = () => {\r\n        let newQuestionItem  = { test_id : this.state.test_id}\r\n        this.setState(state => ({ questions : state.questions.concat({ newQuestionItem })}))\r\n    }\r\n\r\n    componentDidMount(){\r\n       this.setState({ test_id : this.props.test._id })\r\n    }\r\n    \r\n    render(){\r\n        let test = this.props.test\r\n        return (\r\n            <>\r\n                <div style = {{ paddingTop : '5%' }}>\r\n                    <center><h1>{test.english_title}</h1></center>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp; {test.test_commence_date}</Col>\r\n                        <Col span = {10} offset = {2} ><h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.test_commence_time}</Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp; {moment.utc(parseInt(test.test_allowed_time_in_seconds*1000)).format('HH:mm:ss')}</Col>\r\n                        <Col span = {10} offset = {2} ><h3>No Of Days For Which Test Will be  Online</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.test_online_no_of_days}</Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <br/>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp; {this.state.no_of_questions}</Col>\r\n                        <Col span = {10} offset = {2}><Button type=\"primary\" shape=\"round\" icon=\"download\" size={'large'} onClick = {this.handleAddQuestion} >Add Question</Button></Col>\r\n                    </Row>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                {this.state.questions.length === 0 ? <div> </div>: \r\n                <div>\r\n                    {this.state.questions.map((question,index) => {\r\n                        return <AddQuestion IncrementQuestion = {this.IncrementQuestion} test_id = {this.state.test_id} key = {index} />\r\n                    })}\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport MakeTest from '../MakeTest/index'\r\nimport ShowTest from '../ShowTest/index'\r\n\r\nexport default class MakeTestWrapper extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            testCreated : false,\r\n            createdTest : {}\r\n        }\r\n    }\r\n    createTest = (createdTest) => {\r\n        this.setState({ testCreated : true , createdTest : createdTest })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.testCreated === false){\r\n            return <MakeTest createTest = {this.createTest} />\r\n        } else {\r\n            return <ShowTest test = {this.state.createdTest} />\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { Row , Col , Button , Spin } from 'antd';\r\nimport moment from 'moment'\r\nimport AddQuestion from '../AddQuestion/index'\r\nimport { baseurl , endurl } from '../../../baseurl';\r\nexport default class ShowTestById extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            questions : [],\r\n            test_id : '',\r\n            no_of_questions : 0,\r\n            test : {},\r\n            loading : false\r\n        }\r\n    }\r\n\r\n    IncrementQuestion = () => {\r\n        this.setState(state => ({ no_of_questions : state.no_of_questions + 1 }))\r\n    }\r\n\r\n    handleAddQuestion = () => {\r\n        let newQuestionItem  = { test_id : this.state.test_id}\r\n        this.setState(state => ({ questions : state.questions.concat({ newQuestionItem })}))\r\n    }\r\n\r\n    componentDidMount(){\r\n       this.setState({ loading : true })\r\n       let id = this.props.match.params.id;\r\n       fetch(`${baseurl}tests/fetch_test_by_id/${id}/${endurl}`)\r\n       .then((res) => res.json())\r\n       .then((data) => {this.setState({ test : data , loading : false , test_id : data._id , no_of_questions : parseInt(data.count)})})\r\n       .catch((err) => console.log(err))\r\n    }\r\n    \r\n    render(){\r\n        let test = this.state.test\r\n        if(this.state.loading === true){\r\n            return (\r\n            <div style = {{ padding : '15%' , paddingLeft : '50%'}}>\r\n                <Spin size=\"large\" />\r\n            </div>\r\n            )\r\n        } else {\r\n        return (\r\n            <>\r\n                <div style = {{ paddingTop : '5%' }}>\r\n                    <center><h1>{test.english_title}</h1></center>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>Commence Date</h3> &nbsp;&nbsp;&nbsp;&nbsp; {test.test_commence_date}</Col>\r\n                        <Col span = {10} offset = {2} ><h3>Commence Time</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.test_commence_time}</Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>Time Allowed</h3> &nbsp;&nbsp;&nbsp;&nbsp; {moment.utc(parseInt(test.test_allowed_time_in_seconds*1000)).format('HH:mm:ss')}</Col>\r\n                        <Col span = {10} offset = {2} ><h3>No Of Days For Which Test Will be  Online</h3>&nbsp;&nbsp;&nbsp;&nbsp; {test.test_online_no_of_days}</Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <br/>\r\n                    <Row style = {{ paddingLeft : '10%' }}>\r\n                        <Col span = {10} offset = {2} ><h3>No Of Questions</h3> &nbsp;&nbsp;&nbsp; {this.state.no_of_questions}</Col>\r\n                        <Col span = {10} offset = {2}><Button type=\"primary\" shape=\"round\" icon=\"download\" size={'large'} onClick = {this.handleAddQuestion} >Add Question</Button></Col>\r\n                    </Row>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n                {this.state.questions.length === 0 ? <div> </div>: \r\n                <div>\r\n                    {this.state.questions.map((question,index) => {\r\n                        return <AddQuestion IncrementQuestion = {this.IncrementQuestion} test_id = {this.state.test_id} key = {index} />\r\n                    })}\r\n                </div>\r\n                }\r\n            </>\r\n        )\r\n     }\r\n    }\r\n}","import React from 'react'\r\nimport { baseurl , endurl } from '../../../baseurl'\r\nimport { List, Button, Skeleton , Text } from 'antd';\r\nimport  moment  from 'moment'\r\nimport { HashRouter as Router  , Switch , Route , Redirect , Link } from 'react-router-dom'\r\nimport ShowTestById from '../ShowTestById';\r\n\r\n\r\nclass AllTestComponent extends React.Component {\r\n    \r\n    state = {\r\n        initLoading: true,\r\n        loading: false,\r\n        data: [],\r\n        list: [],\r\n    }\r\n    \r\n    getData = (callback) => {\r\n        fetch( `${baseurl}tests/fetch_all_test/${endurl}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {callback(data)})\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n      this.getData((res) => {\r\n          this.setState({\r\n            initLoading: false,\r\n            data: res,\r\n            list: res,\r\n          });\r\n      });\r\n    }\r\n\r\n    isOnline = (item_date,item_time,allowed_days) => {\r\n      let allowed_days_in_seconds  = parseInt(allowed_days) * 24 * 3600\r\n      let dateTime = item_date + ' ' + item_time\r\n      dateTime = moment(dateTime);\r\n      let currentDateTime = moment(new Date());\r\n      var diff = currentDateTime.diff(dateTime,'seconds');\r\n      if((diff < 0)){\r\n        return 'Yet To Start'\r\n      } else if(diff > allowed_days_in_seconds){\r\n        return 'Test Finished'\r\n      } else {\r\n        return 'Test Is Presently Online'\r\n      }\r\n    }\r\n\r\n    render(){\r\n        let match = this.props.match\r\n        const { initLoading, loading, list } = this.state;\r\n        const loadMore = !initLoading && !loading ? (\r\n            <div style={{\r\n            textAlign: 'center', marginTop: 12, height: 32, lineHeight: '32px',\r\n            }}\r\n            >\r\n              \r\n            </div>\r\n      ) : null;\r\n        return ( \r\n          <Router basename = {process.env.PUBLIC_URL} >\r\n            <div style = {{ padding : '5%' }}>\r\n                <center><h1><u>List Of All Tests</u></h1></center>\r\n                <List\r\n                    className=\"demo-loadmore-list\"\r\n                    loading={initLoading}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={list}\r\n                    renderItem={item => (\r\n                    <List.Item actions={[<Link to = {`${match.url}/${item._id}`} >Edit</Link>]}>\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <List.Item.Meta\r\n                                title = {<div style = {{ fontWeight : 'bold' , fontSize : 20}}>{item.english_title}</div>}\r\n                                description = {\r\n                                <div>\r\n                                  <h3>{moment(item.test_commence_date).format('Do MMM ddd YYYY')}</h3>\r\n                                  <h4>Commence Time : {item.test_commence_time}</h4>\r\n                                </div>}\r\n                            />\r\n                            <div>\r\n                              Current Status : &nbsp;&nbsp;&nbsp;<h3>{this.isOnline(item.test_commence_date,item.test_commence_time,item.test_online_no_of_days)}</h3>\r\n                            </div>\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n           </Router> \r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default class AllTest extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  render(){\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n      let match = this.props.match   \r\n      return(\r\n        <Router basename = {process.env.PUBLIC_URL} >\r\n            <Switch>\r\n              <Route exact path = {`${match.url}`} render = {props => <AllTestComponent {...props} /> } />\r\n              <Route path = {`${match.url}/:id`} render = {props => <ShowTestById {...props} /> } />\r\n            </Switch>\r\n        </Router>\r\n      )\r\n    } else {\r\n      return <Redirect to = {{ pathname : '/login'}} />\r\n    }  \r\n  }\r\n}\r\n\r\n \r\n \r\n  \r\n  \r\n  \r\n  \r\n","import React from 'react'\r\n\r\nimport { Redirect , Link , Route , Switch ,  HashRouter as Router} from 'react-router-dom'\r\n\r\nimport EditTest from './EditTest/index'\r\nimport TestStatus from './TestStatus/index'\r\nimport TestHistory from './TestHistory/index'\r\nimport MakeTestWrapper from './MakeTestWrapper/index'\r\nimport AllTest from './AllTest/index';\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\n\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\n\r\nexport default class Test extends React.Component {\r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router  basename = {process.env.PUBLIC_URL} >   \r\n            <Layout>\r\n            <Sider width={\"20%\"} style={{ background: '#fff' }}>\r\n                <Menu\r\n                theme = \"dark\"\r\n                mode=\"inline\"\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    <SubMenu key=\"sub1\" title={<span><Icon type=\"folder-open\" />Manage Test</span>}>\r\n                        <Menu.Item key=\"1\"><Link to = {`${match.url}/make_test`} >Make New Test</Link></Menu.Item>\r\n                        <Menu.Item key=\"2\"><Link to = {`${match.url}/all_tests`} >All Tests</Link></Menu.Item>\r\n                        <Menu.Item key=\"3\"><Link to = {`${match.url}/edit_test`} >Edit Test</Link></Menu.Item>\r\n                        <Menu.Item key=\"4\"><Link to = {`${match.url}/test_status`} >Test Status</Link></Menu.Item>\r\n                        <Menu.Item key=\"5\"><Link to = {`${match.url}/test_history`} >Tests History</Link></Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Content>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/make_test`} render = {props => <MakeTestWrapper {...props} />} />\r\n                    <Route  path = {`${match.url}/all_tests`} render = {props => <AllTest {...props} />} />\r\n                    <Route  path = {`${match.url}/edit_test`} render = {props => <EditTest {...props} />} />\r\n                    <Route  path = {`${match.url}/test_status`} render = {props => <TestStatus {...props} />} />\r\n                    <Route  path = {`${match.url}/test_history`} render = {props => <TestHistory {...props} />} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport WorkSheets from '../WorkSheets/index'\r\nimport PdfManaging from '../PdfManaging/index'\r\nimport Test from '../Test/index'\r\nimport { Redirect , Link , Route , Switch ,  HashRouter as Router  } from 'react-router-dom'\r\nimport {\r\n    Layout, Menu,  Icon,\r\n} from 'antd';\r\nimport  './index.css'\r\n\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nexport default class DashBoard extends React.Component {\r\n  componentWillMount(){\r\n      if(this.props.match.url === '/'){\r\n        this.props.history.push('/dashboard')\r\n      }\r\n  }  \r\n  render() {\r\n    if(localStorage.getItem('authenticated') === \"true\"){  \r\n       let match = this.props.match   \r\n       return (\r\n        <Router basename = {process.env.PUBLIC_URL} >   \r\n            <Layout>\r\n                <Header className=\"header\">\r\n                <div className=\"logo\" />\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    style={{ lineHeight: '64px' , paddingLeft : '18%' }}\r\n                >\r\n                    <Menu.Item key=\"1\"><Link to={`${match.url}/worksheets`}><Icon type=\"file-sync\" />Manage Worksheets</Link></Menu.Item>\r\n                    <Menu.Item key=\"2\"><Link to={`${match.url}/tests`}><Icon type=\"reconciliation\" />Manage Tests</Link></Menu.Item>\r\n                    <Menu.Item key=\"3\"><Link to={`${match.url}/updates`}><Icon type=\"sync\" />Manage Updates</Link></Menu.Item>\r\n                    <Menu.Item key=\"4\"><Link to={`${match.url}/pdfs`}><Icon type=\"sync\" />Manage Pdf Files</Link></Menu.Item>\r\n                </Menu>\r\n                </Header>\r\n                <Switch>\r\n                    <Route  path = {`${match.url}/worksheets`} render = {props => <WorkSheets {...props} />} />\r\n                    <Route  path = {`${match.url}/tests`} render = {props => <Test {...props} />} />\r\n                    <Route  path = {`${match.url}/updates`} render = {props => <h1>Updates</h1>} />\r\n                    <Route  path = {`${match.url}/pdfs`} render = {props => <PdfManaging {...props} />} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n       )\r\n    }\r\n    else {\r\n        return <Redirect to = {{ pathname : '/login'}} />\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default class Login  extends React.Component {\r\n    handleLogin = () => {\r\n        localStorage.setItem(\"authenticated\" , \"true\")\r\n        this.props.history.push('/dashboard')\r\n    }\r\n    render() {\r\n        return(\r\n        <div>\r\n            <button onClick = {() => this.handleLogin()}> Click To Login </button>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport DashBoard from './DashBoard/index'\r\nimport Login from './Login'\r\nimport { Switch , Route , Link  ,  HashRouter as Router  } from 'react-router-dom'\r\n\r\nexport default class Main extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n     <Router basename = {process.env.PUBLIC_URL}> \r\n        <Switch>\r\n            <Route exact path = '/' render = {(props) => <DashBoard {...props} />} />\r\n            <Route exact path = '/login' render = {(props) => <Login {...props} />} />\r\n            <Route path = '/dashboard' render = {(props) => <DashBoard {...props} />} />\r\n        </Switch>  \r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n","\n\n\nimport React from 'react'\nimport Main from './components/Main.js'\nimport './App.css';\n\nexport default class App extends React.Component {\n  \n  constructor(props){\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {}\n  render() {\n    return (\n      <Main />  \n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter , HashRouter  } from 'react-router-dom';\n\nReactDOM.render(\n<HashRouter basename = {process.env.PUBLIC_URL} >\n  <App />\n</HashRouter>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}